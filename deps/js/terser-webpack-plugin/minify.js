import*as e from"node:path";var t={d:(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)},n={};t.d(n,{S:()=>i,v:()=>m});const r=(a={default:()=>e.default},o={},t.d(o,a),o);var a,o;async function i(e){const{name:t,input:n,inputSourceMap:r,extractComments:a}=e,{implementation:o,options:i}=e.minimizer;return o({[t]:n},r,i,a)}async function m(e){const t=import.meta.url.replace(/^[a-z0-9]+:\/\//,""),n=r.default.dirname(t);return i(new Function("__filename","__dirname",`'use strict'\nreturn ${e}`)(t,n))}var c=n.S,u=n.v;export{c as minify,u as transform};
//# sourceMappingURL=minify.js.map