{"version":3,"file":"js/enhanced-resolve.js","mappings":"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","sources":["webpack://@ease-js/packer/../node_modules/.pnpm/enhanced-resolve@5.12.0/node_modules/enhanced-resolve/lib/AliasFieldPlugin.js","webpack://@ease-js/packer/../node_modules/.pnpm/enhanced-resolve@5.12.0/node_modules/enhanced-resolve/lib/AliasPlugin.js","webpack://@ease-js/packer/../node_modules/.pnpm/enhanced-resolve@5.12.0/node_modules/enhanced-resolve/lib/AppendPlugin.js","webpack://@ease-js/packer/../node_modules/.pnpm/enhanced-resolve@5.12.0/node_modules/enhanced-resolve/lib/CachedInputFileSystem.js","webpack://@ease-js/packer/../node_modules/.pnpm/enhanced-resolve@5.12.0/node_modules/enhanced-resolve/lib/CloneBasenamePlugin.js","webpack://@ease-js/packer/../node_modules/.pnpm/enhanced-resolve@5.12.0/node_modules/enhanced-resolve/lib/ConditionalPlugin.js","webpack://@ease-js/packer/../node_modules/.pnpm/enhanced-resolve@5.12.0/node_modules/enhanced-resolve/lib/DescriptionFilePlugin.js","webpack://@ease-js/packer/../node_modules/.pnpm/enhanced-resolve@5.12.0/node_modules/enhanced-resolve/lib/DescriptionFileUtils.js","webpack://@ease-js/packer/../node_modules/.pnpm/enhanced-resolve@5.12.0/node_modules/enhanced-resolve/lib/DirectoryExistsPlugin.js","webpack://@ease-js/packer/../node_modules/.pnpm/enhanced-resolve@5.12.0/node_modules/enhanced-resolve/lib/ExportsFieldPlugin.js","webpack://@ease-js/packer/../node_modules/.pnpm/enhanced-resolve@5.12.0/node_modules/enhanced-resolve/lib/ExtensionAliasPlugin.js","webpack://@ease-js/packer/../node_modules/.pnpm/enhanced-resolve@5.12.0/node_modules/enhanced-resolve/lib/FileExistsPlugin.js","webpack://@ease-js/packer/../node_modules/.pnpm/enhanced-resolve@5.12.0/node_modules/enhanced-resolve/lib/ImportsFieldPlugin.js","webpack://@ease-js/packer/../node_modules/.pnpm/enhanced-resolve@5.12.0/node_modules/enhanced-resolve/lib/JoinRequestPartPlugin.js","webpack://@ease-js/packer/../node_modules/.pnpm/enhanced-resolve@5.12.0/node_modules/enhanced-resolve/lib/JoinRequestPlugin.js","webpack://@ease-js/packer/../node_modules/.pnpm/enhanced-resolve@5.12.0/node_modules/enhanced-resolve/lib/LogInfoPlugin.js","webpack://@ease-js/packer/../node_modules/.pnpm/enhanced-resolve@5.12.0/node_modules/enhanced-resolve/lib/MainFieldPlugin.js","webpack://@ease-js/packer/../node_modules/.pnpm/enhanced-resolve@5.12.0/node_modules/enhanced-resolve/lib/ModulesInHierarchicalDirectoriesPlugin.js","webpack://@ease-js/packer/../node_modules/.pnpm/enhanced-resolve@5.12.0/node_modules/enhanced-resolve/lib/ModulesInRootPlugin.js","webpack://@ease-js/packer/../node_modules/.pnpm/enhanced-resolve@5.12.0/node_modules/enhanced-resolve/lib/NextPlugin.js","webpack://@ease-js/packer/../node_modules/.pnpm/enhanced-resolve@5.12.0/node_modules/enhanced-resolve/lib/ParsePlugin.js","webpack://@ease-js/packer/../node_modules/.pnpm/enhanced-resolve@5.12.0/node_modules/enhanced-resolve/lib/PnpPlugin.js","webpack://@ease-js/packer/../node_modules/.pnpm/enhanced-resolve@5.12.0/node_modules/enhanced-resolve/lib/Resolver.js","webpack://@ease-js/packer/../node_modules/.pnpm/enhanced-resolve@5.12.0/node_modules/enhanced-resolve/lib/ResolverFactory.js","webpack://@ease-js/packer/../node_modules/.pnpm/enhanced-resolve@5.12.0/node_modules/enhanced-resolve/lib/RestrictionsPlugin.js","webpack://@ease-js/packer/../node_modules/.pnpm/enhanced-resolve@5.12.0/node_modules/enhanced-resolve/lib/ResultPlugin.js","webpack://@ease-js/packer/../node_modules/.pnpm/enhanced-resolve@5.12.0/node_modules/enhanced-resolve/lib/RootsPlugin.js","webpack://@ease-js/packer/../node_modules/.pnpm/enhanced-resolve@5.12.0/node_modules/enhanced-resolve/lib/SelfReferencePlugin.js","webpack://@ease-js/packer/../node_modules/.pnpm/enhanced-resolve@5.12.0/node_modules/enhanced-resolve/lib/SymlinkPlugin.js","webpack://@ease-js/packer/../node_modules/.pnpm/enhanced-resolve@5.12.0/node_modules/enhanced-resolve/lib/SyncAsyncFileSystemDecorator.js","webpack://@ease-js/packer/../node_modules/.pnpm/enhanced-resolve@5.12.0/node_modules/enhanced-resolve/lib/TryNextPlugin.js","webpack://@ease-js/packer/../node_modules/.pnpm/enhanced-resolve@5.12.0/node_modules/enhanced-resolve/lib/UnsafeCachePlugin.js","webpack://@ease-js/packer/../node_modules/.pnpm/enhanced-resolve@5.12.0/node_modules/enhanced-resolve/lib/UseFilePlugin.js","webpack://@ease-js/packer/../node_modules/.pnpm/enhanced-resolve@5.12.0/node_modules/enhanced-resolve/lib/createInnerContext.js","webpack://@ease-js/packer/../node_modules/.pnpm/enhanced-resolve@5.12.0/node_modules/enhanced-resolve/lib/forEachBail.js","webpack://@ease-js/packer/../node_modules/.pnpm/enhanced-resolve@5.12.0/node_modules/enhanced-resolve/lib/getInnerRequest.js","webpack://@ease-js/packer/../node_modules/.pnpm/enhanced-resolve@5.12.0/node_modules/enhanced-resolve/lib/getPaths.js","webpack://@ease-js/packer/../node_modules/.pnpm/enhanced-resolve@5.12.0/node_modules/enhanced-resolve/lib/index.js","webpack://@ease-js/packer/../node_modules/.pnpm/enhanced-resolve@5.12.0/node_modules/enhanced-resolve/lib/util/entrypoints.js","webpack://@ease-js/packer/../node_modules/.pnpm/enhanced-resolve@5.12.0/node_modules/enhanced-resolve/lib/util/identifier.js","webpack://@ease-js/packer/../node_modules/.pnpm/enhanced-resolve@5.12.0/node_modules/enhanced-resolve/lib/util/path.js","webpack://@ease-js/packer/external module \"@ease-js/deps/tapable\"","webpack://@ease-js/packer/external module \"node:fs\"","webpack://@ease-js/packer/external module \"path\"","webpack://@ease-js/packer/external module \"process\"","webpack://@ease-js/packer/webpack/bootstrap","webpack://@ease-js/packer/webpack/runtime/define property getters","webpack://@ease-js/packer/webpack/runtime/hasOwnProperty shorthand"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst DescriptionFileUtils = require(\"./DescriptionFileUtils\");\nconst getInnerRequest = require(\"./getInnerRequest\");\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveRequest} ResolveRequest */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\nmodule.exports = class AliasFieldPlugin {\n\t/**\n\t * @param {string | ResolveStepHook} source source\n\t * @param {string | Array<string>} field field\n\t * @param {string | ResolveStepHook} target target\n\t */\n\tconstructor(source, field, target) {\n\t\tthis.source = source;\n\t\tthis.field = field;\n\t\tthis.target = target;\n\t}\n\n\t/**\n\t * @param {Resolver} resolver the resolver\n\t * @returns {void}\n\t */\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"AliasFieldPlugin\", (request, resolveContext, callback) => {\n\t\t\t\tif (!request.descriptionFileData) return callback();\n\t\t\t\tconst innerRequest = getInnerRequest(resolver, request);\n\t\t\t\tif (!innerRequest) return callback();\n\t\t\t\tconst fieldData = DescriptionFileUtils.getField(\n\t\t\t\t\trequest.descriptionFileData,\n\t\t\t\t\tthis.field\n\t\t\t\t);\n\t\t\t\tif (fieldData === null || typeof fieldData !== \"object\") {\n\t\t\t\t\tif (resolveContext.log)\n\t\t\t\t\t\tresolveContext.log(\n\t\t\t\t\t\t\t\"Field '\" +\n\t\t\t\t\t\t\t\tthis.field +\n\t\t\t\t\t\t\t\t\"' doesn't contain a valid alias configuration\"\n\t\t\t\t\t\t);\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\t\t\t\tconst data = Object.prototype.hasOwnProperty.call(\n\t\t\t\t\tfieldData,\n\t\t\t\t\tinnerRequest\n\t\t\t\t)\n\t\t\t\t\t? fieldData[innerRequest]\n\t\t\t\t\t: innerRequest.startsWith(\"./\")\n\t\t\t\t\t? fieldData[innerRequest.slice(2)]\n\t\t\t\t\t: undefined;\n\t\t\t\tif (data === innerRequest) return callback();\n\t\t\t\tif (data === undefined) return callback();\n\t\t\t\tif (data === false) {\n\t\t\t\t\t/** @type {ResolveRequest} */\n\t\t\t\t\tconst ignoreObj = {\n\t\t\t\t\t\t...request,\n\t\t\t\t\t\tpath: false\n\t\t\t\t\t};\n\t\t\t\t\tif (typeof resolveContext.yield === \"function\") {\n\t\t\t\t\t\tresolveContext.yield(ignoreObj);\n\t\t\t\t\t\treturn callback(null, null);\n\t\t\t\t\t}\n\t\t\t\t\treturn callback(null, ignoreObj);\n\t\t\t\t}\n\t\t\t\tconst obj = {\n\t\t\t\t\t...request,\n\t\t\t\t\tpath: request.descriptionFileRoot,\n\t\t\t\t\trequest: data,\n\t\t\t\t\tfullySpecified: false\n\t\t\t\t};\n\t\t\t\tresolver.doResolve(\n\t\t\t\t\ttarget,\n\t\t\t\t\tobj,\n\t\t\t\t\t\"aliased from description file \" +\n\t\t\t\t\t\trequest.descriptionFilePath +\n\t\t\t\t\t\t\" with mapping '\" +\n\t\t\t\t\t\tinnerRequest +\n\t\t\t\t\t\t\"' to '\" +\n\t\t\t\t\t\tdata +\n\t\t\t\t\t\t\"'\",\n\t\t\t\t\tresolveContext,\n\t\t\t\t\t(err, result) => {\n\t\t\t\t\t\tif (err) return callback(err);\n\n\t\t\t\t\t\t// Don't allow other aliasing or raw request\n\t\t\t\t\t\tif (result === undefined) return callback(null, null);\n\t\t\t\t\t\tcallback(null, result);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t});\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst forEachBail = require(\"./forEachBail\");\nconst { PathType, getType } = require(\"./util/path\");\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveRequest} ResolveRequest */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n/** @typedef {{alias: string|Array<string>|false, name: string, onlyModule?: boolean}} AliasOption */\n\nmodule.exports = class AliasPlugin {\n\t/**\n\t * @param {string | ResolveStepHook} source source\n\t * @param {AliasOption | Array<AliasOption>} options options\n\t * @param {string | ResolveStepHook} target target\n\t */\n\tconstructor(source, options, target) {\n\t\tthis.source = source;\n\t\tthis.options = Array.isArray(options) ? options : [options];\n\t\tthis.target = target;\n\t}\n\n\t/**\n\t * @param {Resolver} resolver the resolver\n\t * @returns {void}\n\t */\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tconst getAbsolutePathWithSlashEnding = maybeAbsolutePath => {\n\t\t\tconst type = getType(maybeAbsolutePath);\n\t\t\tif (type === PathType.AbsolutePosix || type === PathType.AbsoluteWin) {\n\t\t\t\treturn resolver.join(maybeAbsolutePath, \"_\").slice(0, -1);\n\t\t\t}\n\t\t\treturn null;\n\t\t};\n\t\tconst isSubPath = (path, maybeSubPath) => {\n\t\t\tconst absolutePath = getAbsolutePathWithSlashEnding(maybeSubPath);\n\t\t\tif (!absolutePath) return false;\n\t\t\treturn path.startsWith(absolutePath);\n\t\t};\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"AliasPlugin\", (request, resolveContext, callback) => {\n\t\t\t\tconst innerRequest = request.request || request.path;\n\t\t\t\tif (!innerRequest) return callback();\n\t\t\t\tforEachBail(\n\t\t\t\t\tthis.options,\n\t\t\t\t\t(item, callback) => {\n\t\t\t\t\t\tlet shouldStop = false;\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tinnerRequest === item.name ||\n\t\t\t\t\t\t\t(!item.onlyModule &&\n\t\t\t\t\t\t\t\t(request.request\n\t\t\t\t\t\t\t\t\t? innerRequest.startsWith(`${item.name}/`)\n\t\t\t\t\t\t\t\t\t: isSubPath(innerRequest, item.name)))\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tconst remainingRequest = innerRequest.substr(item.name.length);\n\t\t\t\t\t\t\tconst resolveWithAlias = (alias, callback) => {\n\t\t\t\t\t\t\t\tif (alias === false) {\n\t\t\t\t\t\t\t\t\t/** @type {ResolveRequest} */\n\t\t\t\t\t\t\t\t\tconst ignoreObj = {\n\t\t\t\t\t\t\t\t\t\t...request,\n\t\t\t\t\t\t\t\t\t\tpath: false\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\tif (typeof resolveContext.yield === \"function\") {\n\t\t\t\t\t\t\t\t\t\tresolveContext.yield(ignoreObj);\n\t\t\t\t\t\t\t\t\t\treturn callback(null, null);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn callback(null, ignoreObj);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\tinnerRequest !== alias &&\n\t\t\t\t\t\t\t\t\t!innerRequest.startsWith(alias + \"/\")\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\tshouldStop = true;\n\t\t\t\t\t\t\t\t\tconst newRequestStr = alias + remainingRequest;\n\t\t\t\t\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t\t\t\t\t...request,\n\t\t\t\t\t\t\t\t\t\trequest: newRequestStr,\n\t\t\t\t\t\t\t\t\t\tfullySpecified: false\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\treturn resolver.doResolve(\n\t\t\t\t\t\t\t\t\t\ttarget,\n\t\t\t\t\t\t\t\t\t\tobj,\n\t\t\t\t\t\t\t\t\t\t\"aliased with mapping '\" +\n\t\t\t\t\t\t\t\t\t\t\titem.name +\n\t\t\t\t\t\t\t\t\t\t\t\"': '\" +\n\t\t\t\t\t\t\t\t\t\t\talias +\n\t\t\t\t\t\t\t\t\t\t\t\"' to '\" +\n\t\t\t\t\t\t\t\t\t\t\tnewRequestStr +\n\t\t\t\t\t\t\t\t\t\t\t\"'\",\n\t\t\t\t\t\t\t\t\t\tresolveContext,\n\t\t\t\t\t\t\t\t\t\t(err, result) => {\n\t\t\t\t\t\t\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\t\t\t\t\t\t\tif (result) return callback(null, result);\n\t\t\t\t\t\t\t\t\t\t\treturn callback();\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn callback();\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tconst stoppingCallback = (err, result) => {\n\t\t\t\t\t\t\t\tif (err) return callback(err);\n\n\t\t\t\t\t\t\t\tif (result) return callback(null, result);\n\t\t\t\t\t\t\t\t// Don't allow other aliasing or raw request\n\t\t\t\t\t\t\t\tif (shouldStop) return callback(null, null);\n\t\t\t\t\t\t\t\treturn callback();\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tif (Array.isArray(item.alias)) {\n\t\t\t\t\t\t\t\treturn forEachBail(\n\t\t\t\t\t\t\t\t\titem.alias,\n\t\t\t\t\t\t\t\t\tresolveWithAlias,\n\t\t\t\t\t\t\t\t\tstoppingCallback\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn resolveWithAlias(item.alias, stoppingCallback);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn callback();\n\t\t\t\t\t},\n\t\t\t\t\tcallback\n\t\t\t\t);\n\t\t\t});\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\nmodule.exports = class AppendPlugin {\n\t/**\n\t * @param {string | ResolveStepHook} source source\n\t * @param {string} appending appending\n\t * @param {string | ResolveStepHook} target target\n\t */\n\tconstructor(source, appending, target) {\n\t\tthis.source = source;\n\t\tthis.appending = appending;\n\t\tthis.target = target;\n\t}\n\n\t/**\n\t * @param {Resolver} resolver the resolver\n\t * @returns {void}\n\t */\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"AppendPlugin\", (request, resolveContext, callback) => {\n\t\t\t\tconst obj = {\n\t\t\t\t\t...request,\n\t\t\t\t\tpath: request.path + this.appending,\n\t\t\t\t\trelativePath:\n\t\t\t\t\t\trequest.relativePath && request.relativePath + this.appending\n\t\t\t\t};\n\t\t\t\tresolver.doResolve(\n\t\t\t\t\ttarget,\n\t\t\t\t\tobj,\n\t\t\t\t\tthis.appending,\n\t\t\t\t\tresolveContext,\n\t\t\t\t\tcallback\n\t\t\t\t);\n\t\t\t});\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst nextTick = require(\"process\").nextTick;\n\n/** @typedef {import(\"./Resolver\").FileSystem} FileSystem */\n/** @typedef {import(\"./Resolver\").SyncFileSystem} SyncFileSystem */\n\nconst dirname = path => {\n\tlet idx = path.length - 1;\n\twhile (idx >= 0) {\n\t\tconst c = path.charCodeAt(idx);\n\t\t// slash or backslash\n\t\tif (c === 47 || c === 92) break;\n\t\tidx--;\n\t}\n\tif (idx < 0) return \"\";\n\treturn path.slice(0, idx);\n};\n\nconst runCallbacks = (callbacks, err, result) => {\n\tif (callbacks.length === 1) {\n\t\tcallbacks[0](err, result);\n\t\tcallbacks.length = 0;\n\t\treturn;\n\t}\n\tlet error;\n\tfor (const callback of callbacks) {\n\t\ttry {\n\t\t\tcallback(err, result);\n\t\t} catch (e) {\n\t\t\tif (!error) error = e;\n\t\t}\n\t}\n\tcallbacks.length = 0;\n\tif (error) throw error;\n};\n\nclass OperationMergerBackend {\n\t/**\n\t * @param {any} provider async method\n\t * @param {any} syncProvider sync method\n\t * @param {any} providerContext call context for the provider methods\n\t */\n\tconstructor(provider, syncProvider, providerContext) {\n\t\tthis._provider = provider;\n\t\tthis._syncProvider = syncProvider;\n\t\tthis._providerContext = providerContext;\n\t\tthis._activeAsyncOperations = new Map();\n\n\t\tthis.provide = this._provider\n\t\t\t? (path, options, callback) => {\n\t\t\t\t\tif (typeof options === \"function\") {\n\t\t\t\t\t\tcallback = options;\n\t\t\t\t\t\toptions = undefined;\n\t\t\t\t\t}\n\t\t\t\t\tif (options) {\n\t\t\t\t\t\treturn this._provider.call(\n\t\t\t\t\t\t\tthis._providerContext,\n\t\t\t\t\t\t\tpath,\n\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\tcallback\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tif (typeof path !== \"string\") {\n\t\t\t\t\t\tcallback(new TypeError(\"path must be a string\"));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tlet callbacks = this._activeAsyncOperations.get(path);\n\t\t\t\t\tif (callbacks) {\n\t\t\t\t\t\tcallbacks.push(callback);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthis._activeAsyncOperations.set(path, (callbacks = [callback]));\n\t\t\t\t\tprovider(path, (err, result) => {\n\t\t\t\t\t\tthis._activeAsyncOperations.delete(path);\n\t\t\t\t\t\trunCallbacks(callbacks, err, result);\n\t\t\t\t\t});\n\t\t\t  }\n\t\t\t: null;\n\t\tthis.provideSync = this._syncProvider\n\t\t\t? (path, options) => {\n\t\t\t\t\treturn this._syncProvider.call(this._providerContext, path, options);\n\t\t\t  }\n\t\t\t: null;\n\t}\n\n\tpurge() {}\n\tpurgeParent() {}\n}\n\n/*\n\nIDLE:\n\tinsert data: goto SYNC\n\nSYNC:\n\tbefore provide: run ticks\n\tevent loop tick: goto ASYNC_ACTIVE\n\nASYNC:\n\ttimeout: run tick, goto ASYNC_PASSIVE\n\nASYNC_PASSIVE:\n\tbefore provide: run ticks\n\nIDLE --[insert data]--> SYNC --[event loop tick]--> ASYNC_ACTIVE --[interval tick]-> ASYNC_PASSIVE\n                                                          ^                             |\n                                                          +---------[insert data]-------+\n*/\n\nconst STORAGE_MODE_IDLE = 0;\nconst STORAGE_MODE_SYNC = 1;\nconst STORAGE_MODE_ASYNC = 2;\n\nclass CacheBackend {\n\t/**\n\t * @param {number} duration max cache duration of items\n\t * @param {any} provider async method\n\t * @param {any} syncProvider sync method\n\t * @param {any} providerContext call context for the provider methods\n\t */\n\tconstructor(duration, provider, syncProvider, providerContext) {\n\t\tthis._duration = duration;\n\t\tthis._provider = provider;\n\t\tthis._syncProvider = syncProvider;\n\t\tthis._providerContext = providerContext;\n\t\t/** @type {Map<string, (function(Error, any): void)[]>} */\n\t\tthis._activeAsyncOperations = new Map();\n\t\t/** @type {Map<string, { err: Error, result: any, level: Set<string> }>} */\n\t\tthis._data = new Map();\n\t\t/** @type {Set<string>[]} */\n\t\tthis._levels = [];\n\t\tfor (let i = 0; i < 10; i++) this._levels.push(new Set());\n\t\tfor (let i = 5000; i < duration; i += 500) this._levels.push(new Set());\n\t\tthis._currentLevel = 0;\n\t\tthis._tickInterval = Math.floor(duration / this._levels.length);\n\t\t/** @type {STORAGE_MODE_IDLE | STORAGE_MODE_SYNC | STORAGE_MODE_ASYNC} */\n\t\tthis._mode = STORAGE_MODE_IDLE;\n\n\t\t/** @type {NodeJS.Timeout | undefined} */\n\t\tthis._timeout = undefined;\n\t\t/** @type {number | undefined} */\n\t\tthis._nextDecay = undefined;\n\n\t\tthis.provide = provider ? this.provide.bind(this) : null;\n\t\tthis.provideSync = syncProvider ? this.provideSync.bind(this) : null;\n\t}\n\n\tprovide(path, options, callback) {\n\t\tif (typeof options === \"function\") {\n\t\t\tcallback = options;\n\t\t\toptions = undefined;\n\t\t}\n\t\tif (typeof path !== \"string\") {\n\t\t\tcallback(new TypeError(\"path must be a string\"));\n\t\t\treturn;\n\t\t}\n\t\tif (options) {\n\t\t\treturn this._provider.call(\n\t\t\t\tthis._providerContext,\n\t\t\t\tpath,\n\t\t\t\toptions,\n\t\t\t\tcallback\n\t\t\t);\n\t\t}\n\n\t\t// When in sync mode we can move to async mode\n\t\tif (this._mode === STORAGE_MODE_SYNC) {\n\t\t\tthis._enterAsyncMode();\n\t\t}\n\n\t\t// Check in cache\n\t\tlet cacheEntry = this._data.get(path);\n\t\tif (cacheEntry !== undefined) {\n\t\t\tif (cacheEntry.err) return nextTick(callback, cacheEntry.err);\n\t\t\treturn nextTick(callback, null, cacheEntry.result);\n\t\t}\n\n\t\t// Check if there is already the same operation running\n\t\tlet callbacks = this._activeAsyncOperations.get(path);\n\t\tif (callbacks !== undefined) {\n\t\t\tcallbacks.push(callback);\n\t\t\treturn;\n\t\t}\n\t\tthis._activeAsyncOperations.set(path, (callbacks = [callback]));\n\n\t\t// Run the operation\n\t\tthis._provider.call(this._providerContext, path, (err, result) => {\n\t\t\tthis._activeAsyncOperations.delete(path);\n\t\t\tthis._storeResult(path, err, result);\n\n\t\t\t// Enter async mode if not yet done\n\t\t\tthis._enterAsyncMode();\n\n\t\t\trunCallbacks(callbacks, err, result);\n\t\t});\n\t}\n\n\tprovideSync(path, options) {\n\t\tif (typeof path !== \"string\") {\n\t\t\tthrow new TypeError(\"path must be a string\");\n\t\t}\n\t\tif (options) {\n\t\t\treturn this._syncProvider.call(this._providerContext, path, options);\n\t\t}\n\n\t\t// In sync mode we may have to decay some cache items\n\t\tif (this._mode === STORAGE_MODE_SYNC) {\n\t\t\tthis._runDecays();\n\t\t}\n\n\t\t// Check in cache\n\t\tlet cacheEntry = this._data.get(path);\n\t\tif (cacheEntry !== undefined) {\n\t\t\tif (cacheEntry.err) throw cacheEntry.err;\n\t\t\treturn cacheEntry.result;\n\t\t}\n\n\t\t// Get all active async operations\n\t\t// This sync operation will also complete them\n\t\tconst callbacks = this._activeAsyncOperations.get(path);\n\t\tthis._activeAsyncOperations.delete(path);\n\n\t\t// Run the operation\n\t\t// When in idle mode, we will enter sync mode\n\t\tlet result;\n\t\ttry {\n\t\t\tresult = this._syncProvider.call(this._providerContext, path);\n\t\t} catch (err) {\n\t\t\tthis._storeResult(path, err, undefined);\n\t\t\tthis._enterSyncModeWhenIdle();\n\t\t\tif (callbacks) runCallbacks(callbacks, err, undefined);\n\t\t\tthrow err;\n\t\t}\n\t\tthis._storeResult(path, undefined, result);\n\t\tthis._enterSyncModeWhenIdle();\n\t\tif (callbacks) runCallbacks(callbacks, undefined, result);\n\t\treturn result;\n\t}\n\n\tpurge(what) {\n\t\tif (!what) {\n\t\t\tif (this._mode !== STORAGE_MODE_IDLE) {\n\t\t\t\tthis._data.clear();\n\t\t\t\tfor (const level of this._levels) {\n\t\t\t\t\tlevel.clear();\n\t\t\t\t}\n\t\t\t\tthis._enterIdleMode();\n\t\t\t}\n\t\t} else if (typeof what === \"string\") {\n\t\t\tfor (let [key, data] of this._data) {\n\t\t\t\tif (key.startsWith(what)) {\n\t\t\t\t\tthis._data.delete(key);\n\t\t\t\t\tdata.level.delete(key);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this._data.size === 0) {\n\t\t\t\tthis._enterIdleMode();\n\t\t\t}\n\t\t} else {\n\t\t\tfor (let [key, data] of this._data) {\n\t\t\t\tfor (const item of what) {\n\t\t\t\t\tif (key.startsWith(item)) {\n\t\t\t\t\t\tthis._data.delete(key);\n\t\t\t\t\t\tdata.level.delete(key);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this._data.size === 0) {\n\t\t\t\tthis._enterIdleMode();\n\t\t\t}\n\t\t}\n\t}\n\n\tpurgeParent(what) {\n\t\tif (!what) {\n\t\t\tthis.purge();\n\t\t} else if (typeof what === \"string\") {\n\t\t\tthis.purge(dirname(what));\n\t\t} else {\n\t\t\tconst set = new Set();\n\t\t\tfor (const item of what) {\n\t\t\t\tset.add(dirname(item));\n\t\t\t}\n\t\t\tthis.purge(set);\n\t\t}\n\t}\n\n\t_storeResult(path, err, result) {\n\t\tif (this._data.has(path)) return;\n\t\tconst level = this._levels[this._currentLevel];\n\t\tthis._data.set(path, { err, result, level });\n\t\tlevel.add(path);\n\t}\n\n\t_decayLevel() {\n\t\tconst nextLevel = (this._currentLevel + 1) % this._levels.length;\n\t\tconst decay = this._levels[nextLevel];\n\t\tthis._currentLevel = nextLevel;\n\t\tfor (let item of decay) {\n\t\t\tthis._data.delete(item);\n\t\t}\n\t\tdecay.clear();\n\t\tif (this._data.size === 0) {\n\t\t\tthis._enterIdleMode();\n\t\t} else {\n\t\t\t// @ts-ignore _nextDecay is always a number in sync mode\n\t\t\tthis._nextDecay += this._tickInterval;\n\t\t}\n\t}\n\n\t_runDecays() {\n\t\twhile (\n\t\t\t/** @type {number} */ (this._nextDecay) <= Date.now() &&\n\t\t\tthis._mode !== STORAGE_MODE_IDLE\n\t\t) {\n\t\t\tthis._decayLevel();\n\t\t}\n\t}\n\n\t_enterAsyncMode() {\n\t\tlet timeout = 0;\n\t\tswitch (this._mode) {\n\t\t\tcase STORAGE_MODE_ASYNC:\n\t\t\t\treturn;\n\t\t\tcase STORAGE_MODE_IDLE:\n\t\t\t\tthis._nextDecay = Date.now() + this._tickInterval;\n\t\t\t\ttimeout = this._tickInterval;\n\t\t\t\tbreak;\n\t\t\tcase STORAGE_MODE_SYNC:\n\t\t\t\tthis._runDecays();\n\t\t\t\t// @ts-ignore _runDecays may change the mode\n\t\t\t\tif (this._mode === STORAGE_MODE_IDLE) return;\n\t\t\t\ttimeout = Math.max(\n\t\t\t\t\t0,\n\t\t\t\t\t/** @type {number} */ (this._nextDecay) - Date.now()\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t}\n\t\tthis._mode = STORAGE_MODE_ASYNC;\n\t\tconst ref = setTimeout(() => {\n\t\t\tthis._mode = STORAGE_MODE_SYNC;\n\t\t\tthis._runDecays();\n\t\t}, timeout);\n\t\tif (ref.unref) ref.unref();\n\t\tthis._timeout = ref;\n\t}\n\n\t_enterSyncModeWhenIdle() {\n\t\tif (this._mode === STORAGE_MODE_IDLE) {\n\t\t\tthis._mode = STORAGE_MODE_SYNC;\n\t\t\tthis._nextDecay = Date.now() + this._tickInterval;\n\t\t}\n\t}\n\n\t_enterIdleMode() {\n\t\tthis._mode = STORAGE_MODE_IDLE;\n\t\tthis._nextDecay = undefined;\n\t\tif (this._timeout) clearTimeout(this._timeout);\n\t}\n}\n\nconst createBackend = (duration, provider, syncProvider, providerContext) => {\n\tif (duration > 0) {\n\t\treturn new CacheBackend(duration, provider, syncProvider, providerContext);\n\t}\n\treturn new OperationMergerBackend(provider, syncProvider, providerContext);\n};\n\nmodule.exports = class CachedInputFileSystem {\n\tconstructor(fileSystem, duration) {\n\t\tthis.fileSystem = fileSystem;\n\n\t\tthis._lstatBackend = createBackend(\n\t\t\tduration,\n\t\t\tthis.fileSystem.lstat,\n\t\t\tthis.fileSystem.lstatSync,\n\t\t\tthis.fileSystem\n\t\t);\n\t\tconst lstat = this._lstatBackend.provide;\n\t\tthis.lstat = /** @type {FileSystem[\"lstat\"]} */ (lstat);\n\t\tconst lstatSync = this._lstatBackend.provideSync;\n\t\tthis.lstatSync = /** @type {SyncFileSystem[\"lstatSync\"]} */ (lstatSync);\n\n\t\tthis._statBackend = createBackend(\n\t\t\tduration,\n\t\t\tthis.fileSystem.stat,\n\t\t\tthis.fileSystem.statSync,\n\t\t\tthis.fileSystem\n\t\t);\n\t\tconst stat = this._statBackend.provide;\n\t\tthis.stat = /** @type {FileSystem[\"stat\"]} */ (stat);\n\t\tconst statSync = this._statBackend.provideSync;\n\t\tthis.statSync = /** @type {SyncFileSystem[\"statSync\"]} */ (statSync);\n\n\t\tthis._readdirBackend = createBackend(\n\t\t\tduration,\n\t\t\tthis.fileSystem.readdir,\n\t\t\tthis.fileSystem.readdirSync,\n\t\t\tthis.fileSystem\n\t\t);\n\t\tconst readdir = this._readdirBackend.provide;\n\t\tthis.readdir = /** @type {FileSystem[\"readdir\"]} */ (readdir);\n\t\tconst readdirSync = this._readdirBackend.provideSync;\n\t\tthis.readdirSync = /** @type {SyncFileSystem[\"readdirSync\"]} */ (readdirSync);\n\n\t\tthis._readFileBackend = createBackend(\n\t\t\tduration,\n\t\t\tthis.fileSystem.readFile,\n\t\t\tthis.fileSystem.readFileSync,\n\t\t\tthis.fileSystem\n\t\t);\n\t\tconst readFile = this._readFileBackend.provide;\n\t\tthis.readFile = /** @type {FileSystem[\"readFile\"]} */ (readFile);\n\t\tconst readFileSync = this._readFileBackend.provideSync;\n\t\tthis.readFileSync = /** @type {SyncFileSystem[\"readFileSync\"]} */ (readFileSync);\n\n\t\tthis._readJsonBackend = createBackend(\n\t\t\tduration,\n\t\t\tthis.fileSystem.readJson ||\n\t\t\t\t(this.readFile &&\n\t\t\t\t\t((path, callback) => {\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tthis.readFile(path, (err, buffer) => {\n\t\t\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\t\t\tif (!buffer || buffer.length === 0)\n\t\t\t\t\t\t\t\treturn callback(new Error(\"No file content\"));\n\t\t\t\t\t\t\tlet data;\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tdata = JSON.parse(buffer.toString(\"utf-8\"));\n\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\treturn callback(e);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcallback(null, data);\n\t\t\t\t\t\t});\n\t\t\t\t\t})),\n\t\t\tthis.fileSystem.readJsonSync ||\n\t\t\t\t(this.readFileSync &&\n\t\t\t\t\t(path => {\n\t\t\t\t\t\tconst buffer = this.readFileSync(path);\n\t\t\t\t\t\tconst data = JSON.parse(buffer.toString(\"utf-8\"));\n\t\t\t\t\t\treturn data;\n\t\t\t\t\t})),\n\t\t\tthis.fileSystem\n\t\t);\n\t\tconst readJson = this._readJsonBackend.provide;\n\t\tthis.readJson = /** @type {FileSystem[\"readJson\"]} */ (readJson);\n\t\tconst readJsonSync = this._readJsonBackend.provideSync;\n\t\tthis.readJsonSync = /** @type {SyncFileSystem[\"readJsonSync\"]} */ (readJsonSync);\n\n\t\tthis._readlinkBackend = createBackend(\n\t\t\tduration,\n\t\t\tthis.fileSystem.readlink,\n\t\t\tthis.fileSystem.readlinkSync,\n\t\t\tthis.fileSystem\n\t\t);\n\t\tconst readlink = this._readlinkBackend.provide;\n\t\tthis.readlink = /** @type {FileSystem[\"readlink\"]} */ (readlink);\n\t\tconst readlinkSync = this._readlinkBackend.provideSync;\n\t\tthis.readlinkSync = /** @type {SyncFileSystem[\"readlinkSync\"]} */ (readlinkSync);\n\t}\n\n\tpurge(what) {\n\t\tthis._statBackend.purge(what);\n\t\tthis._lstatBackend.purge(what);\n\t\tthis._readdirBackend.purgeParent(what);\n\t\tthis._readFileBackend.purge(what);\n\t\tthis._readlinkBackend.purge(what);\n\t\tthis._readJsonBackend.purge(what);\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst basename = require(\"./getPaths\").basename;\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n\nmodule.exports = class CloneBasenamePlugin {\n\tconstructor(source, target) {\n\t\tthis.source = source;\n\t\tthis.target = target;\n\t}\n\n\t/**\n\t * @param {Resolver} resolver the resolver\n\t * @returns {void}\n\t */\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"CloneBasenamePlugin\", (request, resolveContext, callback) => {\n\t\t\t\tconst filename = basename(request.path);\n\t\t\t\tconst filePath = resolver.join(request.path, filename);\n\t\t\t\tconst obj = {\n\t\t\t\t\t...request,\n\t\t\t\t\tpath: filePath,\n\t\t\t\t\trelativePath:\n\t\t\t\t\t\trequest.relativePath &&\n\t\t\t\t\t\tresolver.join(request.relativePath, filename)\n\t\t\t\t};\n\t\t\t\tresolver.doResolve(\n\t\t\t\t\ttarget,\n\t\t\t\t\tobj,\n\t\t\t\t\t\"using path: \" + filePath,\n\t\t\t\t\tresolveContext,\n\t\t\t\t\tcallback\n\t\t\t\t);\n\t\t\t});\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveRequest} ResolveRequest */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\nmodule.exports = class ConditionalPlugin {\n\t/**\n\t * @param {string | ResolveStepHook} source source\n\t * @param {Partial<ResolveRequest>} test compare object\n\t * @param {string | null} message log message\n\t * @param {boolean} allowAlternatives when false, do not continue with the current step when \"test\" matches\n\t * @param {string | ResolveStepHook} target target\n\t */\n\tconstructor(source, test, message, allowAlternatives, target) {\n\t\tthis.source = source;\n\t\tthis.test = test;\n\t\tthis.message = message;\n\t\tthis.allowAlternatives = allowAlternatives;\n\t\tthis.target = target;\n\t}\n\n\t/**\n\t * @param {Resolver} resolver the resolver\n\t * @returns {void}\n\t */\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tconst { test, message, allowAlternatives } = this;\n\t\tconst keys = Object.keys(test);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"ConditionalPlugin\", (request, resolveContext, callback) => {\n\t\t\t\tfor (const prop of keys) {\n\t\t\t\t\tif (request[prop] !== test[prop]) return callback();\n\t\t\t\t}\n\t\t\t\tresolver.doResolve(\n\t\t\t\t\ttarget,\n\t\t\t\t\trequest,\n\t\t\t\t\tmessage,\n\t\t\t\t\tresolveContext,\n\t\t\t\t\tallowAlternatives\n\t\t\t\t\t\t? callback\n\t\t\t\t\t\t: (err, result) => {\n\t\t\t\t\t\t\t\tif (err) return callback(err);\n\n\t\t\t\t\t\t\t\t// Don't allow other alternatives\n\t\t\t\t\t\t\t\tif (result === undefined) return callback(null, null);\n\t\t\t\t\t\t\t\tcallback(null, result);\n\t\t\t\t\t\t  }\n\t\t\t\t);\n\t\t\t});\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst DescriptionFileUtils = require(\"./DescriptionFileUtils\");\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\nmodule.exports = class DescriptionFilePlugin {\n\t/**\n\t * @param {string | ResolveStepHook} source source\n\t * @param {string[]} filenames filenames\n\t * @param {boolean} pathIsFile pathIsFile\n\t * @param {string | ResolveStepHook} target target\n\t */\n\tconstructor(source, filenames, pathIsFile, target) {\n\t\tthis.source = source;\n\t\tthis.filenames = filenames;\n\t\tthis.pathIsFile = pathIsFile;\n\t\tthis.target = target;\n\t}\n\n\t/**\n\t * @param {Resolver} resolver the resolver\n\t * @returns {void}\n\t */\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\n\t\t\t\t\"DescriptionFilePlugin\",\n\t\t\t\t(request, resolveContext, callback) => {\n\t\t\t\t\tconst path = request.path;\n\t\t\t\t\tif (!path) return callback();\n\t\t\t\t\tconst directory = this.pathIsFile\n\t\t\t\t\t\t? DescriptionFileUtils.cdUp(path)\n\t\t\t\t\t\t: path;\n\t\t\t\t\tif (!directory) return callback();\n\t\t\t\t\tDescriptionFileUtils.loadDescriptionFile(\n\t\t\t\t\t\tresolver,\n\t\t\t\t\t\tdirectory,\n\t\t\t\t\t\tthis.filenames,\n\t\t\t\t\t\trequest.descriptionFilePath\n\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\tpath: request.descriptionFilePath,\n\t\t\t\t\t\t\t\t\tcontent: request.descriptionFileData,\n\t\t\t\t\t\t\t\t\tdirectory: /** @type {string} */ (request.descriptionFileRoot)\n\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t\tresolveContext,\n\t\t\t\t\t\t(err, result) => {\n\t\t\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\t\t\tif (!result) {\n\t\t\t\t\t\t\t\tif (resolveContext.log)\n\t\t\t\t\t\t\t\t\tresolveContext.log(\n\t\t\t\t\t\t\t\t\t\t`No description file found in ${directory} or above`\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\treturn callback();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst relativePath =\n\t\t\t\t\t\t\t\t\".\" + path.substr(result.directory.length).replace(/\\\\/g, \"/\");\n\t\t\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t\t\t...request,\n\t\t\t\t\t\t\t\tdescriptionFilePath: result.path,\n\t\t\t\t\t\t\t\tdescriptionFileData: result.content,\n\t\t\t\t\t\t\t\tdescriptionFileRoot: result.directory,\n\t\t\t\t\t\t\t\trelativePath: relativePath\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tresolver.doResolve(\n\t\t\t\t\t\t\t\ttarget,\n\t\t\t\t\t\t\t\tobj,\n\t\t\t\t\t\t\t\t\"using description file: \" +\n\t\t\t\t\t\t\t\t\tresult.path +\n\t\t\t\t\t\t\t\t\t\" (relative path: \" +\n\t\t\t\t\t\t\t\t\trelativePath +\n\t\t\t\t\t\t\t\t\t\")\",\n\t\t\t\t\t\t\t\tresolveContext,\n\t\t\t\t\t\t\t\t(err, result) => {\n\t\t\t\t\t\t\t\t\tif (err) return callback(err);\n\n\t\t\t\t\t\t\t\t\t// Don't allow other processing\n\t\t\t\t\t\t\t\t\tif (result === undefined) return callback(null, null);\n\t\t\t\t\t\t\t\t\tcallback(null, result);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t);\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst forEachBail = require(\"./forEachBail\");\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveContext} ResolveContext */\n\n/**\n * @typedef {Object} DescriptionFileInfo\n * @property {any=} content\n * @property {string} path\n * @property {string} directory\n */\n\n/**\n * @callback ErrorFirstCallback\n * @param {Error|null=} error\n * @param {DescriptionFileInfo=} result\n */\n\n/**\n * @param {Resolver} resolver resolver\n * @param {string} directory directory\n * @param {string[]} filenames filenames\n * @param {DescriptionFileInfo|undefined} oldInfo oldInfo\n * @param {ResolveContext} resolveContext resolveContext\n * @param {ErrorFirstCallback} callback callback\n */\nfunction loadDescriptionFile(\n\tresolver,\n\tdirectory,\n\tfilenames,\n\toldInfo,\n\tresolveContext,\n\tcallback\n) {\n\t(function findDescriptionFile() {\n\t\tif (oldInfo && oldInfo.directory === directory) {\n\t\t\t// We already have info for this directory and can reuse it\n\t\t\treturn callback(null, oldInfo);\n\t\t}\n\t\tforEachBail(\n\t\t\tfilenames,\n\t\t\t(filename, callback) => {\n\t\t\t\tconst descriptionFilePath = resolver.join(directory, filename);\n\t\t\t\tif (resolver.fileSystem.readJson) {\n\t\t\t\t\tresolver.fileSystem.readJson(descriptionFilePath, (err, content) => {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\tif (typeof err.code !== \"undefined\") {\n\t\t\t\t\t\t\t\tif (resolveContext.missingDependencies) {\n\t\t\t\t\t\t\t\t\tresolveContext.missingDependencies.add(descriptionFilePath);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn callback();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (resolveContext.fileDependencies) {\n\t\t\t\t\t\t\t\tresolveContext.fileDependencies.add(descriptionFilePath);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn onJson(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (resolveContext.fileDependencies) {\n\t\t\t\t\t\t\tresolveContext.fileDependencies.add(descriptionFilePath);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tonJson(null, content);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tresolver.fileSystem.readFile(descriptionFilePath, (err, content) => {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\tif (resolveContext.missingDependencies) {\n\t\t\t\t\t\t\t\tresolveContext.missingDependencies.add(descriptionFilePath);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn callback();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (resolveContext.fileDependencies) {\n\t\t\t\t\t\t\tresolveContext.fileDependencies.add(descriptionFilePath);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet json;\n\n\t\t\t\t\t\tif (content) {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tjson = JSON.parse(content.toString());\n\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\treturn onJson(e);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn onJson(new Error(\"No content in file\"));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tonJson(null, json);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tfunction onJson(err, content) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tif (resolveContext.log)\n\t\t\t\t\t\t\tresolveContext.log(\n\t\t\t\t\t\t\t\tdescriptionFilePath + \" (directory description file): \" + err\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\terr.message =\n\t\t\t\t\t\t\t\tdescriptionFilePath + \" (directory description file): \" + err;\n\t\t\t\t\t\treturn callback(err);\n\t\t\t\t\t}\n\t\t\t\t\tcallback(null, {\n\t\t\t\t\t\tcontent,\n\t\t\t\t\t\tdirectory,\n\t\t\t\t\t\tpath: descriptionFilePath\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\t(err, result) => {\n\t\t\t\tif (err) return callback(err);\n\t\t\t\tif (result) {\n\t\t\t\t\treturn callback(null, result);\n\t\t\t\t} else {\n\t\t\t\t\tconst dir = cdUp(directory);\n\t\t\t\t\tif (!dir) {\n\t\t\t\t\t\treturn callback();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdirectory = dir;\n\t\t\t\t\t\treturn findDescriptionFile();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t})();\n}\n\n/**\n * @param {any} content content\n * @param {string|string[]} field field\n * @returns {object|string|number|boolean|undefined} field data\n */\nfunction getField(content, field) {\n\tif (!content) return undefined;\n\tif (Array.isArray(field)) {\n\t\tlet current = content;\n\t\tfor (let j = 0; j < field.length; j++) {\n\t\t\tif (current === null || typeof current !== \"object\") {\n\t\t\t\tcurrent = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcurrent = current[field[j]];\n\t\t}\n\t\treturn current;\n\t} else {\n\t\treturn content[field];\n\t}\n}\n\n/**\n * @param {string} directory directory\n * @returns {string|null} parent directory or null\n */\nfunction cdUp(directory) {\n\tif (directory === \"/\") return null;\n\tconst i = directory.lastIndexOf(\"/\"),\n\t\tj = directory.lastIndexOf(\"\\\\\");\n\tconst p = i < 0 ? j : j < 0 ? i : i < j ? j : i;\n\tif (p < 0) return null;\n\treturn directory.substr(0, p || 1);\n}\n\nexports.loadDescriptionFile = loadDescriptionFile;\nexports.getField = getField;\nexports.cdUp = cdUp;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\nmodule.exports = class DirectoryExistsPlugin {\n\t/**\n\t * @param {string | ResolveStepHook} source source\n\t * @param {string | ResolveStepHook} target target\n\t */\n\tconstructor(source, target) {\n\t\tthis.source = source;\n\t\tthis.target = target;\n\t}\n\n\t/**\n\t * @param {Resolver} resolver the resolver\n\t * @returns {void}\n\t */\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\n\t\t\t\t\"DirectoryExistsPlugin\",\n\t\t\t\t(request, resolveContext, callback) => {\n\t\t\t\t\tconst fs = resolver.fileSystem;\n\t\t\t\t\tconst directory = request.path;\n\t\t\t\t\tif (!directory) return callback();\n\t\t\t\t\tfs.stat(directory, (err, stat) => {\n\t\t\t\t\t\tif (err || !stat) {\n\t\t\t\t\t\t\tif (resolveContext.missingDependencies)\n\t\t\t\t\t\t\t\tresolveContext.missingDependencies.add(directory);\n\t\t\t\t\t\t\tif (resolveContext.log)\n\t\t\t\t\t\t\t\tresolveContext.log(directory + \" doesn't exist\");\n\t\t\t\t\t\t\treturn callback();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!stat.isDirectory()) {\n\t\t\t\t\t\t\tif (resolveContext.missingDependencies)\n\t\t\t\t\t\t\t\tresolveContext.missingDependencies.add(directory);\n\t\t\t\t\t\t\tif (resolveContext.log)\n\t\t\t\t\t\t\t\tresolveContext.log(directory + \" is not a directory\");\n\t\t\t\t\t\t\treturn callback();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (resolveContext.fileDependencies)\n\t\t\t\t\t\t\tresolveContext.fileDependencies.add(directory);\n\t\t\t\t\t\tresolver.doResolve(\n\t\t\t\t\t\t\ttarget,\n\t\t\t\t\t\t\trequest,\n\t\t\t\t\t\t\t`existing directory ${directory}`,\n\t\t\t\t\t\t\tresolveContext,\n\t\t\t\t\t\t\tcallback\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t);\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\n\"use strict\";\n\nconst path = require(\"path\");\nconst DescriptionFileUtils = require(\"./DescriptionFileUtils\");\nconst forEachBail = require(\"./forEachBail\");\nconst { processExportsField } = require(\"./util/entrypoints\");\nconst { parseIdentifier } = require(\"./util/identifier\");\nconst { checkImportsExportsFieldTarget } = require(\"./util/path\");\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n/** @typedef {import(\"./util/entrypoints\").ExportsField} ExportsField */\n/** @typedef {import(\"./util/entrypoints\").FieldProcessor} FieldProcessor */\n\nmodule.exports = class ExportsFieldPlugin {\n\t/**\n\t * @param {string | ResolveStepHook} source source\n\t * @param {Set<string>} conditionNames condition names\n\t * @param {string | string[]} fieldNamePath name path\n\t * @param {string | ResolveStepHook} target target\n\t */\n\tconstructor(source, conditionNames, fieldNamePath, target) {\n\t\tthis.source = source;\n\t\tthis.target = target;\n\t\tthis.conditionNames = conditionNames;\n\t\tthis.fieldName = fieldNamePath;\n\t\t/** @type {WeakMap<any, FieldProcessor>} */\n\t\tthis.fieldProcessorCache = new WeakMap();\n\t}\n\n\t/**\n\t * @param {Resolver} resolver the resolver\n\t * @returns {void}\n\t */\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"ExportsFieldPlugin\", (request, resolveContext, callback) => {\n\t\t\t\t// When there is no description file, abort\n\t\t\t\tif (!request.descriptionFilePath) return callback();\n\t\t\t\tif (\n\t\t\t\t\t// When the description file is inherited from parent, abort\n\t\t\t\t\t// (There is no description file inside of this package)\n\t\t\t\t\trequest.relativePath !== \".\" ||\n\t\t\t\t\trequest.request === undefined\n\t\t\t\t)\n\t\t\t\t\treturn callback();\n\n\t\t\t\tconst remainingRequest =\n\t\t\t\t\trequest.query || request.fragment\n\t\t\t\t\t\t? (request.request === \".\" ? \"./\" : request.request) +\n\t\t\t\t\t\t  request.query +\n\t\t\t\t\t\t  request.fragment\n\t\t\t\t\t\t: request.request;\n\t\t\t\t/** @type {ExportsField|null} */\n\t\t\t\tconst exportsField = DescriptionFileUtils.getField(\n\t\t\t\t\trequest.descriptionFileData,\n\t\t\t\t\tthis.fieldName\n\t\t\t\t);\n\t\t\t\tif (!exportsField) return callback();\n\n\t\t\t\tif (request.directory) {\n\t\t\t\t\treturn callback(\n\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t`Resolving to directories is not possible with the exports field (request was ${remainingRequest}/)`\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tlet paths;\n\n\t\t\t\ttry {\n\t\t\t\t\t// We attach the cache to the description file instead of the exportsField value\n\t\t\t\t\t// because we use a WeakMap and the exportsField could be a string too.\n\t\t\t\t\t// Description file is always an object when exports field can be accessed.\n\t\t\t\t\tlet fieldProcessor = this.fieldProcessorCache.get(\n\t\t\t\t\t\trequest.descriptionFileData\n\t\t\t\t\t);\n\t\t\t\t\tif (fieldProcessor === undefined) {\n\t\t\t\t\t\tfieldProcessor = processExportsField(exportsField);\n\t\t\t\t\t\tthis.fieldProcessorCache.set(\n\t\t\t\t\t\t\trequest.descriptionFileData,\n\t\t\t\t\t\t\tfieldProcessor\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tpaths = fieldProcessor(remainingRequest, this.conditionNames);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tif (resolveContext.log) {\n\t\t\t\t\t\tresolveContext.log(\n\t\t\t\t\t\t\t`Exports field in ${request.descriptionFilePath} can't be processed: ${err}`\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\treturn callback(err);\n\t\t\t\t}\n\n\t\t\t\tif (paths.length === 0) {\n\t\t\t\t\treturn callback(\n\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t`Package path ${remainingRequest} is not exported from package ${request.descriptionFileRoot} (see exports field in ${request.descriptionFilePath})`\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tforEachBail(\n\t\t\t\t\tpaths,\n\t\t\t\t\t(p, callback) => {\n\t\t\t\t\t\tconst parsedIdentifier = parseIdentifier(p);\n\n\t\t\t\t\t\tif (!parsedIdentifier) return callback();\n\n\t\t\t\t\t\tconst [relativePath, query, fragment] = parsedIdentifier;\n\n\t\t\t\t\t\tconst error = checkImportsExportsFieldTarget(relativePath);\n\n\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\treturn callback(error);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t\t...request,\n\t\t\t\t\t\t\trequest: undefined,\n\t\t\t\t\t\t\tpath: path.join(\n\t\t\t\t\t\t\t\t/** @type {string} */ (request.descriptionFileRoot),\n\t\t\t\t\t\t\t\trelativePath\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\trelativePath,\n\t\t\t\t\t\t\tquery,\n\t\t\t\t\t\t\tfragment\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tresolver.doResolve(\n\t\t\t\t\t\t\ttarget,\n\t\t\t\t\t\t\tobj,\n\t\t\t\t\t\t\t\"using exports field: \" + p,\n\t\t\t\t\t\t\tresolveContext,\n\t\t\t\t\t\t\tcallback\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t\t(err, result) => callback(err, result || null)\n\t\t\t\t);\n\t\t\t});\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\n\"use strict\";\n\nconst forEachBail = require(\"./forEachBail\");\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveRequest} ResolveRequest */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n/** @typedef {{ alias: string|string[], extension: string }} ExtensionAliasOption */\n\nmodule.exports = class ExtensionAliasPlugin {\n\t/**\n\t * @param {string | ResolveStepHook} source source\n\t * @param {ExtensionAliasOption} options options\n\t * @param {string | ResolveStepHook} target target\n\t */\n\tconstructor(source, options, target) {\n\t\tthis.source = source;\n\t\tthis.options = options;\n\t\tthis.target = target;\n\t}\n\n\t/**\n\t * @param {Resolver} resolver the resolver\n\t * @returns {void}\n\t */\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tconst { extension, alias } = this.options;\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"ExtensionAliasPlugin\", (request, resolveContext, callback) => {\n\t\t\t\tconst requestPath = request.request;\n\t\t\t\tif (!requestPath || !requestPath.endsWith(extension)) return callback();\n\t\t\t\tconst resolve = (alias, callback) => {\n\t\t\t\t\tresolver.doResolve(\n\t\t\t\t\t\ttarget,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t...request,\n\t\t\t\t\t\t\trequest: `${requestPath.slice(0, -extension.length)}${alias}`,\n\t\t\t\t\t\t\tfullySpecified: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t`aliased from extension alias with mapping '${extension}' to '${alias}'`,\n\t\t\t\t\t\tresolveContext,\n\t\t\t\t\t\tcallback\n\t\t\t\t\t);\n\t\t\t\t};\n\n\t\t\t\tconst stoppingCallback = (err, result) => {\n\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\tif (result) return callback(null, result);\n\t\t\t\t\t// Don't allow other aliasing or raw request\n\t\t\t\t\treturn callback(null, null);\n\t\t\t\t};\n\t\t\t\tif (typeof alias === \"string\") {\n\t\t\t\t\tresolve(alias, stoppingCallback);\n\t\t\t\t} else if (alias.length > 1) {\n\t\t\t\t\tforEachBail(alias, resolve, stoppingCallback);\n\t\t\t\t} else {\n\t\t\t\t\tresolve(alias[0], stoppingCallback);\n\t\t\t\t}\n\t\t\t});\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\nmodule.exports = class FileExistsPlugin {\n\t/**\n\t * @param {string | ResolveStepHook} source source\n\t * @param {string | ResolveStepHook} target target\n\t */\n\tconstructor(source, target) {\n\t\tthis.source = source;\n\t\tthis.target = target;\n\t}\n\n\t/**\n\t * @param {Resolver} resolver the resolver\n\t * @returns {void}\n\t */\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tconst fs = resolver.fileSystem;\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"FileExistsPlugin\", (request, resolveContext, callback) => {\n\t\t\t\tconst file = request.path;\n\t\t\t\tif (!file) return callback();\n\t\t\t\tfs.stat(file, (err, stat) => {\n\t\t\t\t\tif (err || !stat) {\n\t\t\t\t\t\tif (resolveContext.missingDependencies)\n\t\t\t\t\t\t\tresolveContext.missingDependencies.add(file);\n\t\t\t\t\t\tif (resolveContext.log) resolveContext.log(file + \" doesn't exist\");\n\t\t\t\t\t\treturn callback();\n\t\t\t\t\t}\n\t\t\t\t\tif (!stat.isFile()) {\n\t\t\t\t\t\tif (resolveContext.missingDependencies)\n\t\t\t\t\t\t\tresolveContext.missingDependencies.add(file);\n\t\t\t\t\t\tif (resolveContext.log) resolveContext.log(file + \" is not a file\");\n\t\t\t\t\t\treturn callback();\n\t\t\t\t\t}\n\t\t\t\t\tif (resolveContext.fileDependencies)\n\t\t\t\t\t\tresolveContext.fileDependencies.add(file);\n\t\t\t\t\tresolver.doResolve(\n\t\t\t\t\t\ttarget,\n\t\t\t\t\t\trequest,\n\t\t\t\t\t\t\"existing file: \" + file,\n\t\t\t\t\t\tresolveContext,\n\t\t\t\t\t\tcallback\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t});\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\n\"use strict\";\n\nconst path = require(\"path\");\nconst DescriptionFileUtils = require(\"./DescriptionFileUtils\");\nconst forEachBail = require(\"./forEachBail\");\nconst { processImportsField } = require(\"./util/entrypoints\");\nconst { parseIdentifier } = require(\"./util/identifier\");\nconst { checkImportsExportsFieldTarget } = require(\"./util/path\");\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n/** @typedef {import(\"./util/entrypoints\").FieldProcessor} FieldProcessor */\n/** @typedef {import(\"./util/entrypoints\").ImportsField} ImportsField */\n\nconst dotCode = \".\".charCodeAt(0);\n\nmodule.exports = class ImportsFieldPlugin {\n\t/**\n\t * @param {string | ResolveStepHook} source source\n\t * @param {Set<string>} conditionNames condition names\n\t * @param {string | string[]} fieldNamePath name path\n\t * @param {string | ResolveStepHook} targetFile target file\n\t * @param {string | ResolveStepHook} targetPackage target package\n\t */\n\tconstructor(\n\t\tsource,\n\t\tconditionNames,\n\t\tfieldNamePath,\n\t\ttargetFile,\n\t\ttargetPackage\n\t) {\n\t\tthis.source = source;\n\t\tthis.targetFile = targetFile;\n\t\tthis.targetPackage = targetPackage;\n\t\tthis.conditionNames = conditionNames;\n\t\tthis.fieldName = fieldNamePath;\n\t\t/** @type {WeakMap<any, FieldProcessor>} */\n\t\tthis.fieldProcessorCache = new WeakMap();\n\t}\n\n\t/**\n\t * @param {Resolver} resolver the resolver\n\t * @returns {void}\n\t */\n\tapply(resolver) {\n\t\tconst targetFile = resolver.ensureHook(this.targetFile);\n\t\tconst targetPackage = resolver.ensureHook(this.targetPackage);\n\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"ImportsFieldPlugin\", (request, resolveContext, callback) => {\n\t\t\t\t// When there is no description file, abort\n\t\t\t\tif (!request.descriptionFilePath || request.request === undefined) {\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\n\t\t\t\tconst remainingRequest =\n\t\t\t\t\trequest.request + request.query + request.fragment;\n\t\t\t\t/** @type {ImportsField|null} */\n\t\t\t\tconst importsField = DescriptionFileUtils.getField(\n\t\t\t\t\trequest.descriptionFileData,\n\t\t\t\t\tthis.fieldName\n\t\t\t\t);\n\t\t\t\tif (!importsField) return callback();\n\n\t\t\t\tif (request.directory) {\n\t\t\t\t\treturn callback(\n\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t`Resolving to directories is not possible with the imports field (request was ${remainingRequest}/)`\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tlet paths;\n\n\t\t\t\ttry {\n\t\t\t\t\t// We attach the cache to the description file instead of the importsField value\n\t\t\t\t\t// because we use a WeakMap and the importsField could be a string too.\n\t\t\t\t\t// Description file is always an object when exports field can be accessed.\n\t\t\t\t\tlet fieldProcessor = this.fieldProcessorCache.get(\n\t\t\t\t\t\trequest.descriptionFileData\n\t\t\t\t\t);\n\t\t\t\t\tif (fieldProcessor === undefined) {\n\t\t\t\t\t\tfieldProcessor = processImportsField(importsField);\n\t\t\t\t\t\tthis.fieldProcessorCache.set(\n\t\t\t\t\t\t\trequest.descriptionFileData,\n\t\t\t\t\t\t\tfieldProcessor\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tpaths = fieldProcessor(remainingRequest, this.conditionNames);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tif (resolveContext.log) {\n\t\t\t\t\t\tresolveContext.log(\n\t\t\t\t\t\t\t`Imports field in ${request.descriptionFilePath} can't be processed: ${err}`\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\treturn callback(err);\n\t\t\t\t}\n\n\t\t\t\tif (paths.length === 0) {\n\t\t\t\t\treturn callback(\n\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t`Package import ${remainingRequest} is not imported from package ${request.descriptionFileRoot} (see imports field in ${request.descriptionFilePath})`\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tforEachBail(\n\t\t\t\t\tpaths,\n\t\t\t\t\t(p, callback) => {\n\t\t\t\t\t\tconst parsedIdentifier = parseIdentifier(p);\n\n\t\t\t\t\t\tif (!parsedIdentifier) return callback();\n\n\t\t\t\t\t\tconst [path_, query, fragment] = parsedIdentifier;\n\n\t\t\t\t\t\tconst error = checkImportsExportsFieldTarget(path_);\n\n\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\treturn callback(error);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tswitch (path_.charCodeAt(0)) {\n\t\t\t\t\t\t\t// should be relative\n\t\t\t\t\t\t\tcase dotCode: {\n\t\t\t\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t\t\t\t...request,\n\t\t\t\t\t\t\t\t\trequest: undefined,\n\t\t\t\t\t\t\t\t\tpath: path.join(\n\t\t\t\t\t\t\t\t\t\t/** @type {string} */ (request.descriptionFileRoot),\n\t\t\t\t\t\t\t\t\t\tpath_\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\trelativePath: path_,\n\t\t\t\t\t\t\t\t\tquery,\n\t\t\t\t\t\t\t\t\tfragment\n\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\tresolver.doResolve(\n\t\t\t\t\t\t\t\t\ttargetFile,\n\t\t\t\t\t\t\t\t\tobj,\n\t\t\t\t\t\t\t\t\t\"using imports field: \" + p,\n\t\t\t\t\t\t\t\t\tresolveContext,\n\t\t\t\t\t\t\t\t\tcallback\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// package resolving\n\t\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t\t\t\t...request,\n\t\t\t\t\t\t\t\t\trequest: path_,\n\t\t\t\t\t\t\t\t\trelativePath: path_,\n\t\t\t\t\t\t\t\t\tfullySpecified: true,\n\t\t\t\t\t\t\t\t\tquery,\n\t\t\t\t\t\t\t\t\tfragment\n\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\tresolver.doResolve(\n\t\t\t\t\t\t\t\t\ttargetPackage,\n\t\t\t\t\t\t\t\t\tobj,\n\t\t\t\t\t\t\t\t\t\"using imports field: \" + p,\n\t\t\t\t\t\t\t\t\tresolveContext,\n\t\t\t\t\t\t\t\t\tcallback\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t(err, result) => callback(err, result || null)\n\t\t\t\t);\n\t\t\t});\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\nconst namespaceStartCharCode = \"@\".charCodeAt(0);\n\nmodule.exports = class JoinRequestPartPlugin {\n\t/**\n\t * @param {string | ResolveStepHook} source source\n\t * @param {string | ResolveStepHook} target target\n\t */\n\tconstructor(source, target) {\n\t\tthis.source = source;\n\t\tthis.target = target;\n\t}\n\n\t/**\n\t * @param {Resolver} resolver the resolver\n\t * @returns {void}\n\t */\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\n\t\t\t\t\"JoinRequestPartPlugin\",\n\t\t\t\t(request, resolveContext, callback) => {\n\t\t\t\t\tconst req = request.request || \"\";\n\t\t\t\t\tlet i = req.indexOf(\"/\", 3);\n\n\t\t\t\t\tif (i >= 0 && req.charCodeAt(2) === namespaceStartCharCode) {\n\t\t\t\t\t\ti = req.indexOf(\"/\", i + 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet moduleName, remainingRequest, fullySpecified;\n\t\t\t\t\tif (i < 0) {\n\t\t\t\t\t\tmoduleName = req;\n\t\t\t\t\t\tremainingRequest = \".\";\n\t\t\t\t\t\tfullySpecified = false;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmoduleName = req.slice(0, i);\n\t\t\t\t\t\tremainingRequest = \".\" + req.slice(i);\n\t\t\t\t\t\tfullySpecified = request.fullySpecified;\n\t\t\t\t\t}\n\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t...request,\n\t\t\t\t\t\tpath: resolver.join(request.path, moduleName),\n\t\t\t\t\t\trelativePath:\n\t\t\t\t\t\t\trequest.relativePath &&\n\t\t\t\t\t\t\tresolver.join(request.relativePath, moduleName),\n\t\t\t\t\t\trequest: remainingRequest,\n\t\t\t\t\t\tfullySpecified\n\t\t\t\t\t};\n\t\t\t\t\tresolver.doResolve(target, obj, null, resolveContext, callback);\n\t\t\t\t}\n\t\t\t);\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\nmodule.exports = class JoinRequestPlugin {\n\t/**\n\t * @param {string | ResolveStepHook} source source\n\t * @param {string | ResolveStepHook} target target\n\t */\n\tconstructor(source, target) {\n\t\tthis.source = source;\n\t\tthis.target = target;\n\t}\n\n\t/**\n\t * @param {Resolver} resolver the resolver\n\t * @returns {void}\n\t */\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"JoinRequestPlugin\", (request, resolveContext, callback) => {\n\t\t\t\tconst obj = {\n\t\t\t\t\t...request,\n\t\t\t\t\tpath: resolver.join(request.path, request.request),\n\t\t\t\t\trelativePath:\n\t\t\t\t\t\trequest.relativePath &&\n\t\t\t\t\t\tresolver.join(request.relativePath, request.request),\n\t\t\t\t\trequest: undefined\n\t\t\t\t};\n\t\t\t\tresolver.doResolve(target, obj, null, resolveContext, callback);\n\t\t\t});\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n\nmodule.exports = class LogInfoPlugin {\n\tconstructor(source) {\n\t\tthis.source = source;\n\t}\n\n\t/**\n\t * @param {Resolver} resolver the resolver\n\t * @returns {void}\n\t */\n\tapply(resolver) {\n\t\tconst source = this.source;\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"LogInfoPlugin\", (request, resolveContext, callback) => {\n\t\t\t\tif (!resolveContext.log) return callback();\n\t\t\t\tconst log = resolveContext.log;\n\t\t\t\tconst prefix = \"[\" + source + \"] \";\n\t\t\t\tif (request.path)\n\t\t\t\t\tlog(prefix + \"Resolving in directory: \" + request.path);\n\t\t\t\tif (request.request)\n\t\t\t\t\tlog(prefix + \"Resolving request: \" + request.request);\n\t\t\t\tif (request.module) log(prefix + \"Request is an module request.\");\n\t\t\t\tif (request.directory) log(prefix + \"Request is a directory request.\");\n\t\t\t\tif (request.query)\n\t\t\t\t\tlog(prefix + \"Resolving request query: \" + request.query);\n\t\t\t\tif (request.fragment)\n\t\t\t\t\tlog(prefix + \"Resolving request fragment: \" + request.fragment);\n\t\t\t\tif (request.descriptionFilePath)\n\t\t\t\t\tlog(\n\t\t\t\t\t\tprefix + \"Has description data from \" + request.descriptionFilePath\n\t\t\t\t\t);\n\t\t\t\tif (request.relativePath)\n\t\t\t\t\tlog(\n\t\t\t\t\t\tprefix +\n\t\t\t\t\t\t\t\"Relative path from description file is: \" +\n\t\t\t\t\t\t\trequest.relativePath\n\t\t\t\t\t);\n\t\t\t\tcallback();\n\t\t\t});\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst path = require(\"path\");\nconst DescriptionFileUtils = require(\"./DescriptionFileUtils\");\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n/** @typedef {{name: string|Array<string>, forceRelative: boolean}} MainFieldOptions */\n\nconst alreadyTriedMainField = Symbol(\"alreadyTriedMainField\");\n\nmodule.exports = class MainFieldPlugin {\n\t/**\n\t * @param {string | ResolveStepHook} source source\n\t * @param {MainFieldOptions} options options\n\t * @param {string | ResolveStepHook} target target\n\t */\n\tconstructor(source, options, target) {\n\t\tthis.source = source;\n\t\tthis.options = options;\n\t\tthis.target = target;\n\t}\n\n\t/**\n\t * @param {Resolver} resolver the resolver\n\t * @returns {void}\n\t */\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"MainFieldPlugin\", (request, resolveContext, callback) => {\n\t\t\t\tif (\n\t\t\t\t\trequest.path !== request.descriptionFileRoot ||\n\t\t\t\t\trequest[alreadyTriedMainField] === request.descriptionFilePath ||\n\t\t\t\t\t!request.descriptionFilePath\n\t\t\t\t)\n\t\t\t\t\treturn callback();\n\t\t\t\tconst filename = path.basename(request.descriptionFilePath);\n\t\t\t\tlet mainModule = DescriptionFileUtils.getField(\n\t\t\t\t\trequest.descriptionFileData,\n\t\t\t\t\tthis.options.name\n\t\t\t\t);\n\n\t\t\t\tif (\n\t\t\t\t\t!mainModule ||\n\t\t\t\t\ttypeof mainModule !== \"string\" ||\n\t\t\t\t\tmainModule === \".\" ||\n\t\t\t\t\tmainModule === \"./\"\n\t\t\t\t) {\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\t\t\t\tif (this.options.forceRelative && !/^\\.\\.?\\//.test(mainModule))\n\t\t\t\t\tmainModule = \"./\" + mainModule;\n\t\t\t\tconst obj = {\n\t\t\t\t\t...request,\n\t\t\t\t\trequest: mainModule,\n\t\t\t\t\tmodule: false,\n\t\t\t\t\tdirectory: mainModule.endsWith(\"/\"),\n\t\t\t\t\t[alreadyTriedMainField]: request.descriptionFilePath\n\t\t\t\t};\n\t\t\t\treturn resolver.doResolve(\n\t\t\t\t\ttarget,\n\t\t\t\t\tobj,\n\t\t\t\t\t\"use \" +\n\t\t\t\t\t\tmainModule +\n\t\t\t\t\t\t\" from \" +\n\t\t\t\t\t\tthis.options.name +\n\t\t\t\t\t\t\" in \" +\n\t\t\t\t\t\tfilename,\n\t\t\t\t\tresolveContext,\n\t\t\t\t\tcallback\n\t\t\t\t);\n\t\t\t});\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst forEachBail = require(\"./forEachBail\");\nconst getPaths = require(\"./getPaths\");\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\nmodule.exports = class ModulesInHierarchicalDirectoriesPlugin {\n\t/**\n\t * @param {string | ResolveStepHook} source source\n\t * @param {string | Array<string>} directories directories\n\t * @param {string | ResolveStepHook} target target\n\t */\n\tconstructor(source, directories, target) {\n\t\tthis.source = source;\n\t\tthis.directories = /** @type {Array<string>} */ ([]).concat(directories);\n\t\tthis.target = target;\n\t}\n\n\t/**\n\t * @param {Resolver} resolver the resolver\n\t * @returns {void}\n\t */\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\n\t\t\t\t\"ModulesInHierarchicalDirectoriesPlugin\",\n\t\t\t\t(request, resolveContext, callback) => {\n\t\t\t\t\tconst fs = resolver.fileSystem;\n\t\t\t\t\tconst addrs = getPaths(request.path)\n\t\t\t\t\t\t.paths.map(p => {\n\t\t\t\t\t\t\treturn this.directories.map(d => resolver.join(p, d));\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.reduce((array, p) => {\n\t\t\t\t\t\t\tarray.push.apply(array, p);\n\t\t\t\t\t\t\treturn array;\n\t\t\t\t\t\t}, []);\n\t\t\t\t\tforEachBail(\n\t\t\t\t\t\taddrs,\n\t\t\t\t\t\t(addr, callback) => {\n\t\t\t\t\t\t\tfs.stat(addr, (err, stat) => {\n\t\t\t\t\t\t\t\tif (!err && stat && stat.isDirectory()) {\n\t\t\t\t\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t\t\t\t\t...request,\n\t\t\t\t\t\t\t\t\t\tpath: addr,\n\t\t\t\t\t\t\t\t\t\trequest: \"./\" + request.request,\n\t\t\t\t\t\t\t\t\t\tmodule: false\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\tconst message = \"looking for modules in \" + addr;\n\t\t\t\t\t\t\t\t\treturn resolver.doResolve(\n\t\t\t\t\t\t\t\t\t\ttarget,\n\t\t\t\t\t\t\t\t\t\tobj,\n\t\t\t\t\t\t\t\t\t\tmessage,\n\t\t\t\t\t\t\t\t\t\tresolveContext,\n\t\t\t\t\t\t\t\t\t\tcallback\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (resolveContext.log)\n\t\t\t\t\t\t\t\t\tresolveContext.log(\n\t\t\t\t\t\t\t\t\t\taddr + \" doesn't exist or is not a directory\"\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tif (resolveContext.missingDependencies)\n\t\t\t\t\t\t\t\t\tresolveContext.missingDependencies.add(addr);\n\t\t\t\t\t\t\t\treturn callback();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcallback\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t);\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\nmodule.exports = class ModulesInRootPlugin {\n\t/**\n\t * @param {string | ResolveStepHook} source source\n\t * @param {string} path path\n\t * @param {string | ResolveStepHook} target target\n\t */\n\tconstructor(source, path, target) {\n\t\tthis.source = source;\n\t\tthis.path = path;\n\t\tthis.target = target;\n\t}\n\n\t/**\n\t * @param {Resolver} resolver the resolver\n\t * @returns {void}\n\t */\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"ModulesInRootPlugin\", (request, resolveContext, callback) => {\n\t\t\t\tconst obj = {\n\t\t\t\t\t...request,\n\t\t\t\t\tpath: this.path,\n\t\t\t\t\trequest: \"./\" + request.request,\n\t\t\t\t\tmodule: false\n\t\t\t\t};\n\t\t\t\tresolver.doResolve(\n\t\t\t\t\ttarget,\n\t\t\t\t\tobj,\n\t\t\t\t\t\"looking for modules in \" + this.path,\n\t\t\t\t\tresolveContext,\n\t\t\t\t\tcallback\n\t\t\t\t);\n\t\t\t});\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\nmodule.exports = class NextPlugin {\n\t/**\n\t * @param {string | ResolveStepHook} source source\n\t * @param {string | ResolveStepHook} target target\n\t */\n\tconstructor(source, target) {\n\t\tthis.source = source;\n\t\tthis.target = target;\n\t}\n\n\t/**\n\t * @param {Resolver} resolver the resolver\n\t * @returns {void}\n\t */\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"NextPlugin\", (request, resolveContext, callback) => {\n\t\t\t\tresolver.doResolve(target, request, null, resolveContext, callback);\n\t\t\t});\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveRequest} ResolveRequest */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\nmodule.exports = class ParsePlugin {\n\t/**\n\t * @param {string | ResolveStepHook} source source\n\t * @param {Partial<ResolveRequest>} requestOptions request options\n\t * @param {string | ResolveStepHook} target target\n\t */\n\tconstructor(source, requestOptions, target) {\n\t\tthis.source = source;\n\t\tthis.requestOptions = requestOptions;\n\t\tthis.target = target;\n\t}\n\n\t/**\n\t * @param {Resolver} resolver the resolver\n\t * @returns {void}\n\t */\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"ParsePlugin\", (request, resolveContext, callback) => {\n\t\t\t\tconst parsed = resolver.parse(/** @type {string} */ (request.request));\n\t\t\t\tconst obj = { ...request, ...parsed, ...this.requestOptions };\n\t\t\t\tif (request.query && !parsed.query) {\n\t\t\t\t\tobj.query = request.query;\n\t\t\t\t}\n\t\t\t\tif (request.fragment && !parsed.fragment) {\n\t\t\t\t\tobj.fragment = request.fragment;\n\t\t\t\t}\n\t\t\t\tif (parsed && resolveContext.log) {\n\t\t\t\t\tif (parsed.module) resolveContext.log(\"Parsed request is a module\");\n\t\t\t\t\tif (parsed.directory)\n\t\t\t\t\t\tresolveContext.log(\"Parsed request is a directory\");\n\t\t\t\t}\n\t\t\t\t// There is an edge-case where a request with # can be a path or a fragment -> try both\n\t\t\t\tif (obj.request && !obj.query && obj.fragment) {\n\t\t\t\t\tconst directory = obj.fragment.endsWith(\"/\");\n\t\t\t\t\tconst alternative = {\n\t\t\t\t\t\t...obj,\n\t\t\t\t\t\tdirectory,\n\t\t\t\t\t\trequest:\n\t\t\t\t\t\t\tobj.request +\n\t\t\t\t\t\t\t(obj.directory ? \"/\" : \"\") +\n\t\t\t\t\t\t\t(directory ? obj.fragment.slice(0, -1) : obj.fragment),\n\t\t\t\t\t\tfragment: \"\"\n\t\t\t\t\t};\n\t\t\t\t\tresolver.doResolve(\n\t\t\t\t\t\ttarget,\n\t\t\t\t\t\talternative,\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\tresolveContext,\n\t\t\t\t\t\t(err, result) => {\n\t\t\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\t\t\tif (result) return callback(null, result);\n\t\t\t\t\t\t\tresolver.doResolve(target, obj, null, resolveContext, callback);\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tresolver.doResolve(target, obj, null, resolveContext, callback);\n\t\t\t});\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Maël Nison @arcanis\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n/**\n * @typedef {Object} PnpApiImpl\n * @property {function(string, string, object): string} resolveToUnqualified\n */\n\nmodule.exports = class PnpPlugin {\n\t/**\n\t * @param {string | ResolveStepHook} source source\n\t * @param {PnpApiImpl} pnpApi pnpApi\n\t * @param {string | ResolveStepHook} target target\n\t */\n\tconstructor(source, pnpApi, target) {\n\t\tthis.source = source;\n\t\tthis.pnpApi = pnpApi;\n\t\tthis.target = target;\n\t}\n\n\t/**\n\t * @param {Resolver} resolver the resolver\n\t * @returns {void}\n\t */\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"PnpPlugin\", (request, resolveContext, callback) => {\n\t\t\t\tconst req = request.request;\n\t\t\t\tif (!req) return callback();\n\n\t\t\t\t// The trailing slash indicates to PnP that this value is a folder rather than a file\n\t\t\t\tconst issuer = `${request.path}/`;\n\n\t\t\t\tconst packageMatch = /^(@[^/]+\\/)?[^/]+/.exec(req);\n\t\t\t\tif (!packageMatch) return callback();\n\n\t\t\t\tconst packageName = packageMatch[0];\n\t\t\t\tconst innerRequest = `.${req.slice(packageName.length)}`;\n\n\t\t\t\tlet resolution;\n\t\t\t\tlet apiResolution;\n\t\t\t\ttry {\n\t\t\t\t\tresolution = this.pnpApi.resolveToUnqualified(packageName, issuer, {\n\t\t\t\t\t\tconsiderBuiltins: false\n\t\t\t\t\t});\n\t\t\t\t\tif (resolveContext.fileDependencies) {\n\t\t\t\t\t\tapiResolution = this.pnpApi.resolveToUnqualified(\"pnpapi\", issuer, {\n\t\t\t\t\t\t\tconsiderBuiltins: false\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tif (\n\t\t\t\t\t\terror.code === \"MODULE_NOT_FOUND\" &&\n\t\t\t\t\t\terror.pnpCode === \"UNDECLARED_DEPENDENCY\"\n\t\t\t\t\t) {\n\t\t\t\t\t\t// This is not a PnP managed dependency.\n\t\t\t\t\t\t// Try to continue resolving with our alternatives\n\t\t\t\t\t\tif (resolveContext.log) {\n\t\t\t\t\t\t\tresolveContext.log(`request is not managed by the pnpapi`);\n\t\t\t\t\t\t\tfor (const line of error.message.split(\"\\n\").filter(Boolean))\n\t\t\t\t\t\t\t\tresolveContext.log(`  ${line}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn callback();\n\t\t\t\t\t}\n\t\t\t\t\treturn callback(error);\n\t\t\t\t}\n\n\t\t\t\tif (resolution === packageName) return callback();\n\n\t\t\t\tif (apiResolution && resolveContext.fileDependencies) {\n\t\t\t\t\tresolveContext.fileDependencies.add(apiResolution);\n\t\t\t\t}\n\n\t\t\t\tconst obj = {\n\t\t\t\t\t...request,\n\t\t\t\t\tpath: resolution,\n\t\t\t\t\trequest: innerRequest,\n\t\t\t\t\tignoreSymlinks: true,\n\t\t\t\t\tfullySpecified: request.fullySpecified && innerRequest !== \".\"\n\t\t\t\t};\n\t\t\t\tresolver.doResolve(\n\t\t\t\t\ttarget,\n\t\t\t\t\tobj,\n\t\t\t\t\t`resolved by pnp to ${resolution}`,\n\t\t\t\t\tresolveContext,\n\t\t\t\t\t(err, result) => {\n\t\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\t\tif (result) return callback(null, result);\n\t\t\t\t\t\t// Skip alternatives\n\t\t\t\t\t\treturn callback(null, null);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t});\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { AsyncSeriesBailHook, AsyncSeriesHook, SyncHook } = require(\"tapable\");\nconst createInnerContext = require(\"./createInnerContext\");\nconst { parseIdentifier } = require(\"./util/identifier\");\nconst {\n\tnormalize,\n\tcachedJoin: join,\n\tgetType,\n\tPathType\n} = require(\"./util/path\");\n\n/** @typedef {import(\"./ResolverFactory\").ResolveOptions} ResolveOptions */\n\n/**\n * @typedef {Object} FileSystemStats\n * @property {function(): boolean} isDirectory\n * @property {function(): boolean} isFile\n */\n\n/**\n * @typedef {Object} FileSystemDirent\n * @property {Buffer | string} name\n * @property {function(): boolean} isDirectory\n * @property {function(): boolean} isFile\n */\n\n/**\n * @typedef {Object} PossibleFileSystemError\n * @property {string=} code\n * @property {number=} errno\n * @property {string=} path\n * @property {string=} syscall\n */\n\n/**\n * @template T\n * @callback FileSystemCallback\n * @param {PossibleFileSystemError & Error | null | undefined} err\n * @param {T=} result\n */\n\n/**\n * @typedef {Object} FileSystem\n * @property {(function(string, FileSystemCallback<Buffer | string>): void) & function(string, object, FileSystemCallback<Buffer | string>): void} readFile\n * @property {(function(string, FileSystemCallback<(Buffer | string)[] | FileSystemDirent[]>): void) & function(string, object, FileSystemCallback<(Buffer | string)[] | FileSystemDirent[]>): void} readdir\n * @property {((function(string, FileSystemCallback<object>): void) & function(string, object, FileSystemCallback<object>): void)=} readJson\n * @property {(function(string, FileSystemCallback<Buffer | string>): void) & function(string, object, FileSystemCallback<Buffer | string>): void} readlink\n * @property {(function(string, FileSystemCallback<FileSystemStats>): void) & function(string, object, FileSystemCallback<Buffer | string>): void=} lstat\n * @property {(function(string, FileSystemCallback<FileSystemStats>): void) & function(string, object, FileSystemCallback<Buffer | string>): void} stat\n */\n\n/**\n * @typedef {Object} SyncFileSystem\n * @property {function(string, object=): Buffer | string} readFileSync\n * @property {function(string, object=): (Buffer | string)[] | FileSystemDirent[]} readdirSync\n * @property {(function(string, object=): object)=} readJsonSync\n * @property {function(string, object=): Buffer | string} readlinkSync\n * @property {function(string, object=): FileSystemStats=} lstatSync\n * @property {function(string, object=): FileSystemStats} statSync\n */\n\n/**\n * @typedef {Object} ParsedIdentifier\n * @property {string} request\n * @property {string} query\n * @property {string} fragment\n * @property {boolean} directory\n * @property {boolean} module\n * @property {boolean} file\n * @property {boolean} internal\n */\n\n/**\n * @typedef {Object} BaseResolveRequest\n * @property {string | false} path\n * @property {string=} descriptionFilePath\n * @property {string=} descriptionFileRoot\n * @property {object=} descriptionFileData\n * @property {string=} relativePath\n * @property {boolean=} ignoreSymlinks\n * @property {boolean=} fullySpecified\n */\n\n/** @typedef {BaseResolveRequest & Partial<ParsedIdentifier>} ResolveRequest */\n\n/**\n * String with special formatting\n * @typedef {string} StackEntry\n */\n\n/** @template T @typedef {{ add: (T) => void }} WriteOnlySet */\n\n/**\n * Resolve context\n * @typedef {Object} ResolveContext\n * @property {WriteOnlySet<string>=} contextDependencies\n * @property {WriteOnlySet<string>=} fileDependencies files that was found on file system\n * @property {WriteOnlySet<string>=} missingDependencies dependencies that was not found on file system\n * @property {Set<StackEntry>=} stack set of hooks' calls. For instance, `resolve → parsedResolve → describedResolve`,\n * @property {(function(string): void)=} log log function\n * @property {(function (ResolveRequest): void)=} yield yield result, if provided plugins can return several results\n */\n\n/** @typedef {AsyncSeriesBailHook<[ResolveRequest, ResolveContext], ResolveRequest | null>} ResolveStepHook */\n\n/**\n * @param {string} str input string\n * @returns {string} in camel case\n */\nfunction toCamelCase(str) {\n\treturn str.replace(/-([a-z])/g, str => str.substr(1).toUpperCase());\n}\n\nclass Resolver {\n\t/**\n\t * @param {ResolveStepHook} hook hook\n\t * @param {ResolveRequest} request request\n\t * @returns {StackEntry} stack entry\n\t */\n\tstatic createStackEntry(hook, request) {\n\t\treturn (\n\t\t\thook.name +\n\t\t\t\": (\" +\n\t\t\trequest.path +\n\t\t\t\") \" +\n\t\t\t(request.request || \"\") +\n\t\t\t(request.query || \"\") +\n\t\t\t(request.fragment || \"\") +\n\t\t\t(request.directory ? \" directory\" : \"\") +\n\t\t\t(request.module ? \" module\" : \"\")\n\t\t);\n\t}\n\n\t/**\n\t * @param {FileSystem} fileSystem a filesystem\n\t * @param {ResolveOptions} options options\n\t */\n\tconstructor(fileSystem, options) {\n\t\tthis.fileSystem = fileSystem;\n\t\tthis.options = options;\n\t\tthis.hooks = {\n\t\t\t/** @type {SyncHook<[ResolveStepHook, ResolveRequest], void>} */\n\t\t\tresolveStep: new SyncHook([\"hook\", \"request\"], \"resolveStep\"),\n\t\t\t/** @type {SyncHook<[ResolveRequest, Error]>} */\n\t\t\tnoResolve: new SyncHook([\"request\", \"error\"], \"noResolve\"),\n\t\t\t/** @type {ResolveStepHook} */\n\t\t\tresolve: new AsyncSeriesBailHook(\n\t\t\t\t[\"request\", \"resolveContext\"],\n\t\t\t\t\"resolve\"\n\t\t\t),\n\t\t\t/** @type {AsyncSeriesHook<[ResolveRequest, ResolveContext]>} */\n\t\t\tresult: new AsyncSeriesHook([\"result\", \"resolveContext\"], \"result\")\n\t\t};\n\t}\n\n\t/**\n\t * @param {string | ResolveStepHook} name hook name or hook itself\n\t * @returns {ResolveStepHook} the hook\n\t */\n\tensureHook(name) {\n\t\tif (typeof name !== \"string\") {\n\t\t\treturn name;\n\t\t}\n\t\tname = toCamelCase(name);\n\t\tif (/^before/.test(name)) {\n\t\t\treturn /** @type {ResolveStepHook} */ (this.ensureHook(\n\t\t\t\tname[6].toLowerCase() + name.substr(7)\n\t\t\t).withOptions({\n\t\t\t\tstage: -10\n\t\t\t}));\n\t\t}\n\t\tif (/^after/.test(name)) {\n\t\t\treturn /** @type {ResolveStepHook} */ (this.ensureHook(\n\t\t\t\tname[5].toLowerCase() + name.substr(6)\n\t\t\t).withOptions({\n\t\t\t\tstage: 10\n\t\t\t}));\n\t\t}\n\t\tconst hook = this.hooks[name];\n\t\tif (!hook) {\n\t\t\treturn (this.hooks[name] = new AsyncSeriesBailHook(\n\t\t\t\t[\"request\", \"resolveContext\"],\n\t\t\t\tname\n\t\t\t));\n\t\t}\n\t\treturn hook;\n\t}\n\n\t/**\n\t * @param {string | ResolveStepHook} name hook name or hook itself\n\t * @returns {ResolveStepHook} the hook\n\t */\n\tgetHook(name) {\n\t\tif (typeof name !== \"string\") {\n\t\t\treturn name;\n\t\t}\n\t\tname = toCamelCase(name);\n\t\tif (/^before/.test(name)) {\n\t\t\treturn /** @type {ResolveStepHook} */ (this.getHook(\n\t\t\t\tname[6].toLowerCase() + name.substr(7)\n\t\t\t).withOptions({\n\t\t\t\tstage: -10\n\t\t\t}));\n\t\t}\n\t\tif (/^after/.test(name)) {\n\t\t\treturn /** @type {ResolveStepHook} */ (this.getHook(\n\t\t\t\tname[5].toLowerCase() + name.substr(6)\n\t\t\t).withOptions({\n\t\t\t\tstage: 10\n\t\t\t}));\n\t\t}\n\t\tconst hook = this.hooks[name];\n\t\tif (!hook) {\n\t\t\tthrow new Error(`Hook ${name} doesn't exist`);\n\t\t}\n\t\treturn hook;\n\t}\n\n\t/**\n\t * @param {object} context context information object\n\t * @param {string} path context path\n\t * @param {string} request request string\n\t * @returns {string | false} result\n\t */\n\tresolveSync(context, path, request) {\n\t\t/** @type {Error | null | undefined} */\n\t\tlet err = undefined;\n\t\t/** @type {string | false | undefined} */\n\t\tlet result = undefined;\n\t\tlet sync = false;\n\t\tthis.resolve(context, path, request, {}, (e, r) => {\n\t\t\terr = e;\n\t\t\tresult = r;\n\t\t\tsync = true;\n\t\t});\n\t\tif (!sync) {\n\t\t\tthrow new Error(\n\t\t\t\t\"Cannot 'resolveSync' because the fileSystem is not sync. Use 'resolve'!\"\n\t\t\t);\n\t\t}\n\t\tif (err) throw err;\n\t\tif (result === undefined) throw new Error(\"No result\");\n\t\treturn result;\n\t}\n\n\t/**\n\t * @param {object} context context information object\n\t * @param {string} path context path\n\t * @param {string} request request string\n\t * @param {ResolveContext} resolveContext resolve context\n\t * @param {function(Error | null, (string|false)=, ResolveRequest=): void} callback callback function\n\t * @returns {void}\n\t */\n\tresolve(context, path, request, resolveContext, callback) {\n\t\tif (!context || typeof context !== \"object\")\n\t\t\treturn callback(new Error(\"context argument is not an object\"));\n\t\tif (typeof path !== \"string\")\n\t\t\treturn callback(new Error(\"path argument is not a string\"));\n\t\tif (typeof request !== \"string\")\n\t\t\treturn callback(new Error(\"request argument is not a string\"));\n\t\tif (!resolveContext)\n\t\t\treturn callback(new Error(\"resolveContext argument is not set\"));\n\n\t\tconst obj = {\n\t\t\tcontext: context,\n\t\t\tpath: path,\n\t\t\trequest: request\n\t\t};\n\n\t\tlet yield_;\n\t\tlet yieldCalled = false;\n\t\tlet finishYield;\n\t\tif (typeof resolveContext.yield === \"function\") {\n\t\t\tconst old = resolveContext.yield;\n\t\t\tyield_ = obj => {\n\t\t\t\told(obj);\n\t\t\t\tyieldCalled = true;\n\t\t\t};\n\t\t\tfinishYield = result => {\n\t\t\t\tif (result) yield_(result);\n\t\t\t\tcallback(null);\n\t\t\t};\n\t\t}\n\n\t\tconst message = `resolve '${request}' in '${path}'`;\n\n\t\tconst finishResolved = result => {\n\t\t\treturn callback(\n\t\t\t\tnull,\n\t\t\t\tresult.path === false\n\t\t\t\t\t? false\n\t\t\t\t\t: `${result.path.replace(/#/g, \"\\0#\")}${\n\t\t\t\t\t\t\tresult.query ? result.query.replace(/#/g, \"\\0#\") : \"\"\n\t\t\t\t\t  }${result.fragment || \"\"}`,\n\t\t\t\tresult\n\t\t\t);\n\t\t};\n\n\t\tconst finishWithoutResolve = log => {\n\t\t\t/**\n\t\t\t * @type {Error & {details?: string}}\n\t\t\t */\n\t\t\tconst error = new Error(\"Can't \" + message);\n\t\t\terror.details = log.join(\"\\n\");\n\t\t\tthis.hooks.noResolve.call(obj, error);\n\t\t\treturn callback(error);\n\t\t};\n\n\t\tif (resolveContext.log) {\n\t\t\t// We need log anyway to capture it in case of an error\n\t\t\tconst parentLog = resolveContext.log;\n\t\t\tconst log = [];\n\t\t\treturn this.doResolve(\n\t\t\t\tthis.hooks.resolve,\n\t\t\t\tobj,\n\t\t\t\tmessage,\n\t\t\t\t{\n\t\t\t\t\tlog: msg => {\n\t\t\t\t\t\tparentLog(msg);\n\t\t\t\t\t\tlog.push(msg);\n\t\t\t\t\t},\n\t\t\t\t\tyield: yield_,\n\t\t\t\t\tfileDependencies: resolveContext.fileDependencies,\n\t\t\t\t\tcontextDependencies: resolveContext.contextDependencies,\n\t\t\t\t\tmissingDependencies: resolveContext.missingDependencies,\n\t\t\t\t\tstack: resolveContext.stack\n\t\t\t\t},\n\t\t\t\t(err, result) => {\n\t\t\t\t\tif (err) return callback(err);\n\n\t\t\t\t\tif (yieldCalled || (result && yield_)) return finishYield(result);\n\t\t\t\t\tif (result) return finishResolved(result);\n\n\t\t\t\t\treturn finishWithoutResolve(log);\n\t\t\t\t}\n\t\t\t);\n\t\t} else {\n\t\t\t// Try to resolve assuming there is no error\n\t\t\t// We don't log stuff in this case\n\t\t\treturn this.doResolve(\n\t\t\t\tthis.hooks.resolve,\n\t\t\t\tobj,\n\t\t\t\tmessage,\n\t\t\t\t{\n\t\t\t\t\tlog: undefined,\n\t\t\t\t\tyield: yield_,\n\t\t\t\t\tfileDependencies: resolveContext.fileDependencies,\n\t\t\t\t\tcontextDependencies: resolveContext.contextDependencies,\n\t\t\t\t\tmissingDependencies: resolveContext.missingDependencies,\n\t\t\t\t\tstack: resolveContext.stack\n\t\t\t\t},\n\t\t\t\t(err, result) => {\n\t\t\t\t\tif (err) return callback(err);\n\n\t\t\t\t\tif (yieldCalled || (result && yield_)) return finishYield(result);\n\t\t\t\t\tif (result) return finishResolved(result);\n\n\t\t\t\t\t// log is missing for the error details\n\t\t\t\t\t// so we redo the resolving for the log info\n\t\t\t\t\t// this is more expensive to the success case\n\t\t\t\t\t// is assumed by default\n\n\t\t\t\t\tconst log = [];\n\n\t\t\t\t\treturn this.doResolve(\n\t\t\t\t\t\tthis.hooks.resolve,\n\t\t\t\t\t\tobj,\n\t\t\t\t\t\tmessage,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlog: msg => log.push(msg),\n\t\t\t\t\t\t\tyield: yield_,\n\t\t\t\t\t\t\tstack: resolveContext.stack\n\t\t\t\t\t\t},\n\t\t\t\t\t\t(err, result) => {\n\t\t\t\t\t\t\tif (err) return callback(err);\n\n\t\t\t\t\t\t\t// In a case that there is a race condition and yield will be called\n\t\t\t\t\t\t\tif (yieldCalled || (result && yield_)) return finishYield(result);\n\n\t\t\t\t\t\t\treturn finishWithoutResolve(log);\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t}\n\n\tdoResolve(hook, request, message, resolveContext, callback) {\n\t\tconst stackEntry = Resolver.createStackEntry(hook, request);\n\n\t\tlet newStack;\n\t\tif (resolveContext.stack) {\n\t\t\tnewStack = new Set(resolveContext.stack);\n\t\t\tif (resolveContext.stack.has(stackEntry)) {\n\t\t\t\t/**\n\t\t\t\t * Prevent recursion\n\t\t\t\t * @type {Error & {recursion?: boolean}}\n\t\t\t\t */\n\t\t\t\tconst recursionError = new Error(\n\t\t\t\t\t\"Recursion in resolving\\nStack:\\n  \" +\n\t\t\t\t\t\tArray.from(newStack).join(\"\\n  \")\n\t\t\t\t);\n\t\t\t\trecursionError.recursion = true;\n\t\t\t\tif (resolveContext.log)\n\t\t\t\t\tresolveContext.log(\"abort resolving because of recursion\");\n\t\t\t\treturn callback(recursionError);\n\t\t\t}\n\t\t\tnewStack.add(stackEntry);\n\t\t} else {\n\t\t\tnewStack = new Set([stackEntry]);\n\t\t}\n\t\tthis.hooks.resolveStep.call(hook, request);\n\n\t\tif (hook.isUsed()) {\n\t\t\tconst innerContext = createInnerContext(\n\t\t\t\t{\n\t\t\t\t\tlog: resolveContext.log,\n\t\t\t\t\tyield: resolveContext.yield,\n\t\t\t\t\tfileDependencies: resolveContext.fileDependencies,\n\t\t\t\t\tcontextDependencies: resolveContext.contextDependencies,\n\t\t\t\t\tmissingDependencies: resolveContext.missingDependencies,\n\t\t\t\t\tstack: newStack\n\t\t\t\t},\n\t\t\t\tmessage\n\t\t\t);\n\t\t\treturn hook.callAsync(request, innerContext, (err, result) => {\n\t\t\t\tif (err) return callback(err);\n\t\t\t\tif (result) return callback(null, result);\n\t\t\t\tcallback();\n\t\t\t});\n\t\t} else {\n\t\t\tcallback();\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} identifier identifier\n\t * @returns {ParsedIdentifier} parsed identifier\n\t */\n\tparse(identifier) {\n\t\tconst part = {\n\t\t\trequest: \"\",\n\t\t\tquery: \"\",\n\t\t\tfragment: \"\",\n\t\t\tmodule: false,\n\t\t\tdirectory: false,\n\t\t\tfile: false,\n\t\t\tinternal: false\n\t\t};\n\n\t\tconst parsedIdentifier = parseIdentifier(identifier);\n\n\t\tif (!parsedIdentifier) return part;\n\n\t\t[part.request, part.query, part.fragment] = parsedIdentifier;\n\n\t\tif (part.request.length > 0) {\n\t\t\tpart.internal = this.isPrivate(identifier);\n\t\t\tpart.module = this.isModule(part.request);\n\t\t\tpart.directory = this.isDirectory(part.request);\n\t\t\tif (part.directory) {\n\t\t\t\tpart.request = part.request.substr(0, part.request.length - 1);\n\t\t\t}\n\t\t}\n\n\t\treturn part;\n\t}\n\n\tisModule(path) {\n\t\treturn getType(path) === PathType.Normal;\n\t}\n\n\tisPrivate(path) {\n\t\treturn getType(path) === PathType.Internal;\n\t}\n\n\t/**\n\t * @param {string} path a path\n\t * @returns {boolean} true, if the path is a directory path\n\t */\n\tisDirectory(path) {\n\t\treturn path.endsWith(\"/\");\n\t}\n\n\tjoin(path, request) {\n\t\treturn join(path, request);\n\t}\n\n\tnormalize(path) {\n\t\treturn normalize(path);\n\t}\n}\n\nmodule.exports = Resolver;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst versions = require(\"process\").versions;\nconst Resolver = require(\"./Resolver\");\nconst { getType, PathType } = require(\"./util/path\");\n\nconst SyncAsyncFileSystemDecorator = require(\"./SyncAsyncFileSystemDecorator\");\n\nconst AliasFieldPlugin = require(\"./AliasFieldPlugin\");\nconst AliasPlugin = require(\"./AliasPlugin\");\nconst AppendPlugin = require(\"./AppendPlugin\");\nconst ConditionalPlugin = require(\"./ConditionalPlugin\");\nconst DescriptionFilePlugin = require(\"./DescriptionFilePlugin\");\nconst DirectoryExistsPlugin = require(\"./DirectoryExistsPlugin\");\nconst ExportsFieldPlugin = require(\"./ExportsFieldPlugin\");\nconst ExtensionAliasPlugin = require(\"./ExtensionAliasPlugin\");\nconst FileExistsPlugin = require(\"./FileExistsPlugin\");\nconst ImportsFieldPlugin = require(\"./ImportsFieldPlugin\");\nconst JoinRequestPartPlugin = require(\"./JoinRequestPartPlugin\");\nconst JoinRequestPlugin = require(\"./JoinRequestPlugin\");\nconst MainFieldPlugin = require(\"./MainFieldPlugin\");\nconst ModulesInHierarchicalDirectoriesPlugin = require(\"./ModulesInHierarchicalDirectoriesPlugin\");\nconst ModulesInRootPlugin = require(\"./ModulesInRootPlugin\");\nconst NextPlugin = require(\"./NextPlugin\");\nconst ParsePlugin = require(\"./ParsePlugin\");\nconst PnpPlugin = require(\"./PnpPlugin\");\nconst RestrictionsPlugin = require(\"./RestrictionsPlugin\");\nconst ResultPlugin = require(\"./ResultPlugin\");\nconst RootsPlugin = require(\"./RootsPlugin\");\nconst SelfReferencePlugin = require(\"./SelfReferencePlugin\");\nconst SymlinkPlugin = require(\"./SymlinkPlugin\");\nconst TryNextPlugin = require(\"./TryNextPlugin\");\nconst UnsafeCachePlugin = require(\"./UnsafeCachePlugin\");\nconst UseFilePlugin = require(\"./UseFilePlugin\");\n\n/** @typedef {import(\"./AliasPlugin\").AliasOption} AliasOptionEntry */\n/** @typedef {import(\"./ExtensionAliasPlugin\").ExtensionAliasOption} ExtensionAliasOption */\n/** @typedef {import(\"./PnpPlugin\").PnpApiImpl} PnpApi */\n/** @typedef {import(\"./Resolver\").FileSystem} FileSystem */\n/** @typedef {import(\"./Resolver\").ResolveRequest} ResolveRequest */\n/** @typedef {import(\"./Resolver\").SyncFileSystem} SyncFileSystem */\n\n/** @typedef {string|string[]|false} AliasOptionNewRequest */\n/** @typedef {{[k: string]: AliasOptionNewRequest}} AliasOptions */\n/** @typedef {{[k: string]: string|string[] }} ExtensionAliasOptions */\n/** @typedef {{apply: function(Resolver): void} | function(this: Resolver, Resolver): void} Plugin */\n\n/**\n * @typedef {Object} UserResolveOptions\n * @property {(AliasOptions | AliasOptionEntry[])=} alias A list of module alias configurations or an object which maps key to value\n * @property {(AliasOptions | AliasOptionEntry[])=} fallback A list of module alias configurations or an object which maps key to value, applied only after modules option\n * @property {ExtensionAliasOptions=} extensionAlias An object which maps extension to extension aliases\n * @property {(string | string[])[]=} aliasFields A list of alias fields in description files\n * @property {(function(ResolveRequest): boolean)=} cachePredicate A function which decides whether a request should be cached or not. An object is passed with at least `path` and `request` properties.\n * @property {boolean=} cacheWithContext Whether or not the unsafeCache should include request context as part of the cache key.\n * @property {string[]=} descriptionFiles A list of description files to read from\n * @property {string[]=} conditionNames A list of exports field condition names.\n * @property {boolean=} enforceExtension Enforce that a extension from extensions must be used\n * @property {(string | string[])[]=} exportsFields A list of exports fields in description files\n * @property {(string | string[])[]=} importsFields A list of imports fields in description files\n * @property {string[]=} extensions A list of extensions which should be tried for files\n * @property {FileSystem} fileSystem The file system which should be used\n * @property {(object | boolean)=} unsafeCache Use this cache object to unsafely cache the successful requests\n * @property {boolean=} symlinks Resolve symlinks to their symlinked location\n * @property {Resolver=} resolver A prepared Resolver to which the plugins are attached\n * @property {string[] | string=} modules A list of directories to resolve modules from, can be absolute path or folder name\n * @property {(string | string[] | {name: string | string[], forceRelative: boolean})[]=} mainFields A list of main fields in description files\n * @property {string[]=} mainFiles  A list of main files in directories\n * @property {Plugin[]=} plugins A list of additional resolve plugins which should be applied\n * @property {PnpApi | null=} pnpApi A PnP API that should be used - null is \"never\", undefined is \"auto\"\n * @property {string[]=} roots A list of root paths\n * @property {boolean=} fullySpecified The request is already fully specified and no extensions or directories are resolved for it\n * @property {boolean=} resolveToContext Resolve to a context instead of a file\n * @property {(string|RegExp)[]=} restrictions A list of resolve restrictions\n * @property {boolean=} useSyncFileSystemCalls Use only the sync constraints of the file system calls\n * @property {boolean=} preferRelative Prefer to resolve module requests as relative requests before falling back to modules\n * @property {boolean=} preferAbsolute Prefer to resolve server-relative urls as absolute paths before falling back to resolve in roots\n */\n\n/**\n * @typedef {Object} ResolveOptions\n * @property {AliasOptionEntry[]} alias\n * @property {AliasOptionEntry[]} fallback\n * @property {Set<string | string[]>} aliasFields\n * @property {ExtensionAliasOption[]} extensionAlias\n * @property {(function(ResolveRequest): boolean)} cachePredicate\n * @property {boolean} cacheWithContext\n * @property {Set<string>} conditionNames A list of exports field condition names.\n * @property {string[]} descriptionFiles\n * @property {boolean} enforceExtension\n * @property {Set<string | string[]>} exportsFields\n * @property {Set<string | string[]>} importsFields\n * @property {Set<string>} extensions\n * @property {FileSystem} fileSystem\n * @property {object | false} unsafeCache\n * @property {boolean} symlinks\n * @property {Resolver=} resolver\n * @property {Array<string | string[]>} modules\n * @property {{name: string[], forceRelative: boolean}[]} mainFields\n * @property {Set<string>} mainFiles\n * @property {Plugin[]} plugins\n * @property {PnpApi | null} pnpApi\n * @property {Set<string>} roots\n * @property {boolean} fullySpecified\n * @property {boolean} resolveToContext\n * @property {Set<string|RegExp>} restrictions\n * @property {boolean} preferRelative\n * @property {boolean} preferAbsolute\n */\n\n/**\n * @param {PnpApi | null=} option option\n * @returns {PnpApi | null} processed option\n */\nfunction processPnpApiOption(option) {\n\tif (\n\t\toption === undefined &&\n\t\t/** @type {NodeJS.ProcessVersions & {pnp: string}} */ versions.pnp\n\t) {\n\t\t// @ts-ignore\n\t\treturn require(\"pnpapi\"); // eslint-disable-line node/no-missing-require\n\t}\n\n\treturn option || null;\n}\n\n/**\n * @param {AliasOptions | AliasOptionEntry[] | undefined} alias alias\n * @returns {AliasOptionEntry[]} normalized aliases\n */\nfunction normalizeAlias(alias) {\n\treturn typeof alias === \"object\" && !Array.isArray(alias) && alias !== null\n\t\t? Object.keys(alias).map(key => {\n\t\t\t\t/** @type {AliasOptionEntry} */\n\t\t\t\tconst obj = { name: key, onlyModule: false, alias: alias[key] };\n\n\t\t\t\tif (/\\$$/.test(key)) {\n\t\t\t\t\tobj.onlyModule = true;\n\t\t\t\t\tobj.name = key.substr(0, key.length - 1);\n\t\t\t\t}\n\n\t\t\t\treturn obj;\n\t\t  })\n\t\t: /** @type {Array<AliasOptionEntry>} */ (alias) || [];\n}\n\n/**\n * @param {UserResolveOptions} options input options\n * @returns {ResolveOptions} output options\n */\nfunction createOptions(options) {\n\tconst mainFieldsSet = new Set(options.mainFields || [\"main\"]);\n\tconst mainFields = [];\n\n\tfor (const item of mainFieldsSet) {\n\t\tif (typeof item === \"string\") {\n\t\t\tmainFields.push({\n\t\t\t\tname: [item],\n\t\t\t\tforceRelative: true\n\t\t\t});\n\t\t} else if (Array.isArray(item)) {\n\t\t\tmainFields.push({\n\t\t\t\tname: item,\n\t\t\t\tforceRelative: true\n\t\t\t});\n\t\t} else {\n\t\t\tmainFields.push({\n\t\t\t\tname: Array.isArray(item.name) ? item.name : [item.name],\n\t\t\t\tforceRelative: item.forceRelative\n\t\t\t});\n\t\t}\n\t}\n\n\treturn {\n\t\talias: normalizeAlias(options.alias),\n\t\tfallback: normalizeAlias(options.fallback),\n\t\taliasFields: new Set(options.aliasFields),\n\t\tcachePredicate:\n\t\t\toptions.cachePredicate ||\n\t\t\tfunction () {\n\t\t\t\treturn true;\n\t\t\t},\n\t\tcacheWithContext:\n\t\t\ttypeof options.cacheWithContext !== \"undefined\"\n\t\t\t\t? options.cacheWithContext\n\t\t\t\t: true,\n\t\texportsFields: new Set(options.exportsFields || [\"exports\"]),\n\t\timportsFields: new Set(options.importsFields || [\"imports\"]),\n\t\tconditionNames: new Set(options.conditionNames),\n\t\tdescriptionFiles: Array.from(\n\t\t\tnew Set(options.descriptionFiles || [\"package.json\"])\n\t\t),\n\t\tenforceExtension:\n\t\t\toptions.enforceExtension === undefined\n\t\t\t\t? options.extensions && options.extensions.includes(\"\")\n\t\t\t\t\t? true\n\t\t\t\t\t: false\n\t\t\t\t: options.enforceExtension,\n\t\textensions: new Set(options.extensions || [\".js\", \".json\", \".node\"]),\n\t\textensionAlias: options.extensionAlias\n\t\t\t? Object.keys(options.extensionAlias).map(k => ({\n\t\t\t\t\textension: k,\n\t\t\t\t\talias: /** @type {ExtensionAliasOptions} */ (options.extensionAlias)[\n\t\t\t\t\t\tk\n\t\t\t\t\t]\n\t\t\t  }))\n\t\t\t: [],\n\t\tfileSystem: options.useSyncFileSystemCalls\n\t\t\t? new SyncAsyncFileSystemDecorator(\n\t\t\t\t\t/** @type {SyncFileSystem} */ (\n\t\t\t\t\t\t/** @type {unknown} */ (options.fileSystem)\n\t\t\t\t\t)\n\t\t\t  )\n\t\t\t: options.fileSystem,\n\t\tunsafeCache:\n\t\t\toptions.unsafeCache && typeof options.unsafeCache !== \"object\"\n\t\t\t\t? {}\n\t\t\t\t: options.unsafeCache || false,\n\t\tsymlinks: typeof options.symlinks !== \"undefined\" ? options.symlinks : true,\n\t\tresolver: options.resolver,\n\t\tmodules: mergeFilteredToArray(\n\t\t\tArray.isArray(options.modules)\n\t\t\t\t? options.modules\n\t\t\t\t: options.modules\n\t\t\t\t? [options.modules]\n\t\t\t\t: [\"node_modules\"],\n\t\t\titem => {\n\t\t\t\tconst type = getType(item);\n\t\t\t\treturn type === PathType.Normal || type === PathType.Relative;\n\t\t\t}\n\t\t),\n\t\tmainFields,\n\t\tmainFiles: new Set(options.mainFiles || [\"index\"]),\n\t\tplugins: options.plugins || [],\n\t\tpnpApi: processPnpApiOption(options.pnpApi),\n\t\troots: new Set(options.roots || undefined),\n\t\tfullySpecified: options.fullySpecified || false,\n\t\tresolveToContext: options.resolveToContext || false,\n\t\tpreferRelative: options.preferRelative || false,\n\t\tpreferAbsolute: options.preferAbsolute || false,\n\t\trestrictions: new Set(options.restrictions)\n\t};\n}\n\n/**\n * @param {UserResolveOptions} options resolve options\n * @returns {Resolver} created resolver\n */\nexports.createResolver = function (options) {\n\tconst normalizedOptions = createOptions(options);\n\n\tconst {\n\t\talias,\n\t\tfallback,\n\t\taliasFields,\n\t\tcachePredicate,\n\t\tcacheWithContext,\n\t\tconditionNames,\n\t\tdescriptionFiles,\n\t\tenforceExtension,\n\t\texportsFields,\n\t\textensionAlias,\n\t\timportsFields,\n\t\textensions,\n\t\tfileSystem,\n\t\tfullySpecified,\n\t\tmainFields,\n\t\tmainFiles,\n\t\tmodules,\n\t\tplugins: userPlugins,\n\t\tpnpApi,\n\t\tresolveToContext,\n\t\tpreferRelative,\n\t\tpreferAbsolute,\n\t\tsymlinks,\n\t\tunsafeCache,\n\t\tresolver: customResolver,\n\t\trestrictions,\n\t\troots\n\t} = normalizedOptions;\n\n\tconst plugins = userPlugins.slice();\n\n\tconst resolver = customResolver\n\t\t? customResolver\n\t\t: new Resolver(fileSystem, normalizedOptions);\n\n\t//// pipeline ////\n\n\tresolver.ensureHook(\"resolve\");\n\tresolver.ensureHook(\"internalResolve\");\n\tresolver.ensureHook(\"newInternalResolve\");\n\tresolver.ensureHook(\"parsedResolve\");\n\tresolver.ensureHook(\"describedResolve\");\n\tresolver.ensureHook(\"rawResolve\");\n\tresolver.ensureHook(\"normalResolve\");\n\tresolver.ensureHook(\"internal\");\n\tresolver.ensureHook(\"rawModule\");\n\tresolver.ensureHook(\"module\");\n\tresolver.ensureHook(\"resolveAsModule\");\n\tresolver.ensureHook(\"undescribedResolveInPackage\");\n\tresolver.ensureHook(\"resolveInPackage\");\n\tresolver.ensureHook(\"resolveInExistingDirectory\");\n\tresolver.ensureHook(\"relative\");\n\tresolver.ensureHook(\"describedRelative\");\n\tresolver.ensureHook(\"directory\");\n\tresolver.ensureHook(\"undescribedExistingDirectory\");\n\tresolver.ensureHook(\"existingDirectory\");\n\tresolver.ensureHook(\"undescribedRawFile\");\n\tresolver.ensureHook(\"rawFile\");\n\tresolver.ensureHook(\"file\");\n\tresolver.ensureHook(\"finalFile\");\n\tresolver.ensureHook(\"existingFile\");\n\tresolver.ensureHook(\"resolved\");\n\n\t// TODO remove in next major\n\t// cspell:word Interal\n\t// Backward-compat\n\tresolver.hooks.newInteralResolve = resolver.hooks.newInternalResolve;\n\n\t// resolve\n\tfor (const { source, resolveOptions } of [\n\t\t{ source: \"resolve\", resolveOptions: { fullySpecified } },\n\t\t{ source: \"internal-resolve\", resolveOptions: { fullySpecified: false } }\n\t]) {\n\t\tif (unsafeCache) {\n\t\t\tplugins.push(\n\t\t\t\tnew UnsafeCachePlugin(\n\t\t\t\t\tsource,\n\t\t\t\t\tcachePredicate,\n\t\t\t\t\tunsafeCache,\n\t\t\t\t\tcacheWithContext,\n\t\t\t\t\t`new-${source}`\n\t\t\t\t)\n\t\t\t);\n\t\t\tplugins.push(\n\t\t\t\tnew ParsePlugin(`new-${source}`, resolveOptions, \"parsed-resolve\")\n\t\t\t);\n\t\t} else {\n\t\t\tplugins.push(new ParsePlugin(source, resolveOptions, \"parsed-resolve\"));\n\t\t}\n\t}\n\n\t// parsed-resolve\n\tplugins.push(\n\t\tnew DescriptionFilePlugin(\n\t\t\t\"parsed-resolve\",\n\t\t\tdescriptionFiles,\n\t\t\tfalse,\n\t\t\t\"described-resolve\"\n\t\t)\n\t);\n\tplugins.push(new NextPlugin(\"after-parsed-resolve\", \"described-resolve\"));\n\n\t// described-resolve\n\tplugins.push(new NextPlugin(\"described-resolve\", \"raw-resolve\"));\n\tif (fallback.length > 0) {\n\t\tplugins.push(\n\t\t\tnew AliasPlugin(\"described-resolve\", fallback, \"internal-resolve\")\n\t\t);\n\t}\n\n\t// raw-resolve\n\tif (alias.length > 0) {\n\t\tplugins.push(new AliasPlugin(\"raw-resolve\", alias, \"internal-resolve\"));\n\t}\n\taliasFields.forEach(item => {\n\t\tplugins.push(new AliasFieldPlugin(\"raw-resolve\", item, \"internal-resolve\"));\n\t});\n\textensionAlias.forEach(item =>\n\t\tplugins.push(\n\t\t\tnew ExtensionAliasPlugin(\"raw-resolve\", item, \"normal-resolve\")\n\t\t)\n\t);\n\tplugins.push(new NextPlugin(\"raw-resolve\", \"normal-resolve\"));\n\n\t// normal-resolve\n\tif (preferRelative) {\n\t\tplugins.push(new JoinRequestPlugin(\"after-normal-resolve\", \"relative\"));\n\t}\n\tplugins.push(\n\t\tnew ConditionalPlugin(\n\t\t\t\"after-normal-resolve\",\n\t\t\t{ module: true },\n\t\t\t\"resolve as module\",\n\t\t\tfalse,\n\t\t\t\"raw-module\"\n\t\t)\n\t);\n\tplugins.push(\n\t\tnew ConditionalPlugin(\n\t\t\t\"after-normal-resolve\",\n\t\t\t{ internal: true },\n\t\t\t\"resolve as internal import\",\n\t\t\tfalse,\n\t\t\t\"internal\"\n\t\t)\n\t);\n\tif (preferAbsolute) {\n\t\tplugins.push(new JoinRequestPlugin(\"after-normal-resolve\", \"relative\"));\n\t}\n\tif (roots.size > 0) {\n\t\tplugins.push(new RootsPlugin(\"after-normal-resolve\", roots, \"relative\"));\n\t}\n\tif (!preferRelative && !preferAbsolute) {\n\t\tplugins.push(new JoinRequestPlugin(\"after-normal-resolve\", \"relative\"));\n\t}\n\n\t// internal\n\timportsFields.forEach(importsField => {\n\t\tplugins.push(\n\t\t\tnew ImportsFieldPlugin(\n\t\t\t\t\"internal\",\n\t\t\t\tconditionNames,\n\t\t\t\timportsField,\n\t\t\t\t\"relative\",\n\t\t\t\t\"internal-resolve\"\n\t\t\t)\n\t\t);\n\t});\n\n\t// raw-module\n\texportsFields.forEach(exportsField => {\n\t\tplugins.push(\n\t\t\tnew SelfReferencePlugin(\"raw-module\", exportsField, \"resolve-as-module\")\n\t\t);\n\t});\n\tmodules.forEach(item => {\n\t\tif (Array.isArray(item)) {\n\t\t\tif (item.includes(\"node_modules\") && pnpApi) {\n\t\t\t\tplugins.push(\n\t\t\t\t\tnew ModulesInHierarchicalDirectoriesPlugin(\n\t\t\t\t\t\t\"raw-module\",\n\t\t\t\t\t\titem.filter(i => i !== \"node_modules\"),\n\t\t\t\t\t\t\"module\"\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\tplugins.push(\n\t\t\t\t\tnew PnpPlugin(\"raw-module\", pnpApi, \"undescribed-resolve-in-package\")\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tplugins.push(\n\t\t\t\t\tnew ModulesInHierarchicalDirectoriesPlugin(\n\t\t\t\t\t\t\"raw-module\",\n\t\t\t\t\t\titem,\n\t\t\t\t\t\t\"module\"\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tplugins.push(new ModulesInRootPlugin(\"raw-module\", item, \"module\"));\n\t\t}\n\t});\n\n\t// module\n\tplugins.push(new JoinRequestPartPlugin(\"module\", \"resolve-as-module\"));\n\n\t// resolve-as-module\n\tif (!resolveToContext) {\n\t\tplugins.push(\n\t\t\tnew ConditionalPlugin(\n\t\t\t\t\"resolve-as-module\",\n\t\t\t\t{ directory: false, request: \".\" },\n\t\t\t\t\"single file module\",\n\t\t\t\ttrue,\n\t\t\t\t\"undescribed-raw-file\"\n\t\t\t)\n\t\t);\n\t}\n\tplugins.push(\n\t\tnew DirectoryExistsPlugin(\n\t\t\t\"resolve-as-module\",\n\t\t\t\"undescribed-resolve-in-package\"\n\t\t)\n\t);\n\n\t// undescribed-resolve-in-package\n\tplugins.push(\n\t\tnew DescriptionFilePlugin(\n\t\t\t\"undescribed-resolve-in-package\",\n\t\t\tdescriptionFiles,\n\t\t\tfalse,\n\t\t\t\"resolve-in-package\"\n\t\t)\n\t);\n\tplugins.push(\n\t\tnew NextPlugin(\"after-undescribed-resolve-in-package\", \"resolve-in-package\")\n\t);\n\n\t// resolve-in-package\n\texportsFields.forEach(exportsField => {\n\t\tplugins.push(\n\t\t\tnew ExportsFieldPlugin(\n\t\t\t\t\"resolve-in-package\",\n\t\t\t\tconditionNames,\n\t\t\t\texportsField,\n\t\t\t\t\"relative\"\n\t\t\t)\n\t\t);\n\t});\n\tplugins.push(\n\t\tnew NextPlugin(\"resolve-in-package\", \"resolve-in-existing-directory\")\n\t);\n\n\t// resolve-in-existing-directory\n\tplugins.push(\n\t\tnew JoinRequestPlugin(\"resolve-in-existing-directory\", \"relative\")\n\t);\n\n\t// relative\n\tplugins.push(\n\t\tnew DescriptionFilePlugin(\n\t\t\t\"relative\",\n\t\t\tdescriptionFiles,\n\t\t\ttrue,\n\t\t\t\"described-relative\"\n\t\t)\n\t);\n\tplugins.push(new NextPlugin(\"after-relative\", \"described-relative\"));\n\n\t// described-relative\n\tif (resolveToContext) {\n\t\tplugins.push(new NextPlugin(\"described-relative\", \"directory\"));\n\t} else {\n\t\tplugins.push(\n\t\t\tnew ConditionalPlugin(\n\t\t\t\t\"described-relative\",\n\t\t\t\t{ directory: false },\n\t\t\t\tnull,\n\t\t\t\ttrue,\n\t\t\t\t\"raw-file\"\n\t\t\t)\n\t\t);\n\t\tplugins.push(\n\t\t\tnew ConditionalPlugin(\n\t\t\t\t\"described-relative\",\n\t\t\t\t{ fullySpecified: false },\n\t\t\t\t\"as directory\",\n\t\t\t\ttrue,\n\t\t\t\t\"directory\"\n\t\t\t)\n\t\t);\n\t}\n\n\t// directory\n\tplugins.push(\n\t\tnew DirectoryExistsPlugin(\"directory\", \"undescribed-existing-directory\")\n\t);\n\n\tif (resolveToContext) {\n\t\t// undescribed-existing-directory\n\t\tplugins.push(new NextPlugin(\"undescribed-existing-directory\", \"resolved\"));\n\t} else {\n\t\t// undescribed-existing-directory\n\t\tplugins.push(\n\t\t\tnew DescriptionFilePlugin(\n\t\t\t\t\"undescribed-existing-directory\",\n\t\t\t\tdescriptionFiles,\n\t\t\t\tfalse,\n\t\t\t\t\"existing-directory\"\n\t\t\t)\n\t\t);\n\t\tmainFiles.forEach(item => {\n\t\t\tplugins.push(\n\t\t\t\tnew UseFilePlugin(\n\t\t\t\t\t\"undescribed-existing-directory\",\n\t\t\t\t\titem,\n\t\t\t\t\t\"undescribed-raw-file\"\n\t\t\t\t)\n\t\t\t);\n\t\t});\n\n\t\t// described-existing-directory\n\t\tmainFields.forEach(item => {\n\t\t\tplugins.push(\n\t\t\t\tnew MainFieldPlugin(\n\t\t\t\t\t\"existing-directory\",\n\t\t\t\t\titem,\n\t\t\t\t\t\"resolve-in-existing-directory\"\n\t\t\t\t)\n\t\t\t);\n\t\t});\n\t\tmainFiles.forEach(item => {\n\t\t\tplugins.push(\n\t\t\t\tnew UseFilePlugin(\"existing-directory\", item, \"undescribed-raw-file\")\n\t\t\t);\n\t\t});\n\n\t\t// undescribed-raw-file\n\t\tplugins.push(\n\t\t\tnew DescriptionFilePlugin(\n\t\t\t\t\"undescribed-raw-file\",\n\t\t\t\tdescriptionFiles,\n\t\t\t\ttrue,\n\t\t\t\t\"raw-file\"\n\t\t\t)\n\t\t);\n\t\tplugins.push(new NextPlugin(\"after-undescribed-raw-file\", \"raw-file\"));\n\n\t\t// raw-file\n\t\tplugins.push(\n\t\t\tnew ConditionalPlugin(\n\t\t\t\t\"raw-file\",\n\t\t\t\t{ fullySpecified: true },\n\t\t\t\tnull,\n\t\t\t\tfalse,\n\t\t\t\t\"file\"\n\t\t\t)\n\t\t);\n\t\tif (!enforceExtension) {\n\t\t\tplugins.push(new TryNextPlugin(\"raw-file\", \"no extension\", \"file\"));\n\t\t}\n\t\textensions.forEach(item => {\n\t\t\tplugins.push(new AppendPlugin(\"raw-file\", item, \"file\"));\n\t\t});\n\n\t\t// file\n\t\tif (alias.length > 0)\n\t\t\tplugins.push(new AliasPlugin(\"file\", alias, \"internal-resolve\"));\n\t\taliasFields.forEach(item => {\n\t\t\tplugins.push(new AliasFieldPlugin(\"file\", item, \"internal-resolve\"));\n\t\t});\n\t\tplugins.push(new NextPlugin(\"file\", \"final-file\"));\n\n\t\t// final-file\n\t\tplugins.push(new FileExistsPlugin(\"final-file\", \"existing-file\"));\n\n\t\t// existing-file\n\t\tif (symlinks)\n\t\t\tplugins.push(new SymlinkPlugin(\"existing-file\", \"existing-file\"));\n\t\tplugins.push(new NextPlugin(\"existing-file\", \"resolved\"));\n\t}\n\n\t// resolved\n\tif (restrictions.size > 0) {\n\t\tplugins.push(new RestrictionsPlugin(resolver.hooks.resolved, restrictions));\n\t}\n\tplugins.push(new ResultPlugin(resolver.hooks.resolved));\n\n\t//// RESOLVER ////\n\n\tfor (const plugin of plugins) {\n\t\tif (typeof plugin === \"function\") {\n\t\t\tplugin.call(resolver, resolver);\n\t\t} else {\n\t\t\tplugin.apply(resolver);\n\t\t}\n\t}\n\n\treturn resolver;\n};\n\n/**\n * Merging filtered elements\n * @param {string[]} array source array\n * @param {function(string): boolean} filter predicate\n * @returns {Array<string | string[]>} merge result\n */\nfunction mergeFilteredToArray(array, filter) {\n\t/** @type {Array<string | string[]>} */\n\tconst result = [];\n\tconst set = new Set(array);\n\n\tfor (const item of set) {\n\t\tif (filter(item)) {\n\t\t\tconst lastElement =\n\t\t\t\tresult.length > 0 ? result[result.length - 1] : undefined;\n\t\t\tif (Array.isArray(lastElement)) {\n\t\t\t\tlastElement.push(item);\n\t\t\t} else {\n\t\t\t\tresult.push([item]);\n\t\t\t}\n\t\t} else {\n\t\t\tresult.push(item);\n\t\t}\n\t}\n\n\treturn result;\n}\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\nconst slashCode = \"/\".charCodeAt(0);\nconst backslashCode = \"\\\\\".charCodeAt(0);\n\nconst isInside = (path, parent) => {\n\tif (!path.startsWith(parent)) return false;\n\tif (path.length === parent.length) return true;\n\tconst charCode = path.charCodeAt(parent.length);\n\treturn charCode === slashCode || charCode === backslashCode;\n};\n\nmodule.exports = class RestrictionsPlugin {\n\t/**\n\t * @param {string | ResolveStepHook} source source\n\t * @param {Set<string | RegExp>} restrictions restrictions\n\t */\n\tconstructor(source, restrictions) {\n\t\tthis.source = source;\n\t\tthis.restrictions = restrictions;\n\t}\n\n\t/**\n\t * @param {Resolver} resolver the resolver\n\t * @returns {void}\n\t */\n\tapply(resolver) {\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"RestrictionsPlugin\", (request, resolveContext, callback) => {\n\t\t\t\tif (typeof request.path === \"string\") {\n\t\t\t\t\tconst path = request.path;\n\t\t\t\t\tfor (const rule of this.restrictions) {\n\t\t\t\t\t\tif (typeof rule === \"string\") {\n\t\t\t\t\t\t\tif (!isInside(path, rule)) {\n\t\t\t\t\t\t\t\tif (resolveContext.log) {\n\t\t\t\t\t\t\t\t\tresolveContext.log(\n\t\t\t\t\t\t\t\t\t\t`${path} is not inside of the restriction ${rule}`\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn callback(null, null);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (!rule.test(path)) {\n\t\t\t\t\t\t\tif (resolveContext.log) {\n\t\t\t\t\t\t\t\tresolveContext.log(\n\t\t\t\t\t\t\t\t\t`${path} doesn't match the restriction ${rule}`\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn callback(null, null);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcallback();\n\t\t\t});\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\nmodule.exports = class ResultPlugin {\n\t/**\n\t * @param {ResolveStepHook} source source\n\t */\n\tconstructor(source) {\n\t\tthis.source = source;\n\t}\n\n\t/**\n\t * @param {Resolver} resolver the resolver\n\t * @returns {void}\n\t */\n\tapply(resolver) {\n\t\tthis.source.tapAsync(\n\t\t\t\"ResultPlugin\",\n\t\t\t(request, resolverContext, callback) => {\n\t\t\t\tconst obj = { ...request };\n\t\t\t\tif (resolverContext.log)\n\t\t\t\t\tresolverContext.log(\"reporting result \" + obj.path);\n\t\t\t\tresolver.hooks.result.callAsync(obj, resolverContext, err => {\n\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\tif (typeof resolverContext.yield === \"function\") {\n\t\t\t\t\t\tresolverContext.yield(obj);\n\t\t\t\t\t\tcallback(null, null);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcallback(null, obj);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\n\"use strict\";\n\nconst forEachBail = require(\"./forEachBail\");\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\nclass RootsPlugin {\n\t/**\n\t * @param {string | ResolveStepHook} source source hook\n\t * @param {Set<string>} roots roots\n\t * @param {string | ResolveStepHook} target target hook\n\t */\n\tconstructor(source, roots, target) {\n\t\tthis.roots = Array.from(roots);\n\t\tthis.source = source;\n\t\tthis.target = target;\n\t}\n\n\t/**\n\t * @param {Resolver} resolver the resolver\n\t * @returns {void}\n\t */\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"RootsPlugin\", (request, resolveContext, callback) => {\n\t\t\t\tconst req = request.request;\n\t\t\t\tif (!req) return callback();\n\t\t\t\tif (!req.startsWith(\"/\")) return callback();\n\n\t\t\t\tforEachBail(\n\t\t\t\t\tthis.roots,\n\t\t\t\t\t(root, callback) => {\n\t\t\t\t\t\tconst path = resolver.join(root, req.slice(1));\n\t\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t\t...request,\n\t\t\t\t\t\t\tpath,\n\t\t\t\t\t\t\trelativePath: request.relativePath && path\n\t\t\t\t\t\t};\n\t\t\t\t\t\tresolver.doResolve(\n\t\t\t\t\t\t\ttarget,\n\t\t\t\t\t\t\tobj,\n\t\t\t\t\t\t\t`root path ${root}`,\n\t\t\t\t\t\t\tresolveContext,\n\t\t\t\t\t\t\tcallback\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t\tcallback\n\t\t\t\t);\n\t\t\t});\n\t}\n}\n\nmodule.exports = RootsPlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst DescriptionFileUtils = require(\"./DescriptionFileUtils\");\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\nconst slashCode = \"/\".charCodeAt(0);\n\nmodule.exports = class SelfReferencePlugin {\n\t/**\n\t * @param {string | ResolveStepHook} source source\n\t * @param {string | string[]} fieldNamePath name path\n\t * @param {string | ResolveStepHook} target target\n\t */\n\tconstructor(source, fieldNamePath, target) {\n\t\tthis.source = source;\n\t\tthis.target = target;\n\t\tthis.fieldName = fieldNamePath;\n\t}\n\n\t/**\n\t * @param {Resolver} resolver the resolver\n\t * @returns {void}\n\t */\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"SelfReferencePlugin\", (request, resolveContext, callback) => {\n\t\t\t\tif (!request.descriptionFilePath) return callback();\n\n\t\t\t\tconst req = request.request;\n\t\t\t\tif (!req) return callback();\n\n\t\t\t\t// Feature is only enabled when an exports field is present\n\t\t\t\tconst exportsField = DescriptionFileUtils.getField(\n\t\t\t\t\trequest.descriptionFileData,\n\t\t\t\t\tthis.fieldName\n\t\t\t\t);\n\t\t\t\tif (!exportsField) return callback();\n\n\t\t\t\tconst name = DescriptionFileUtils.getField(\n\t\t\t\t\trequest.descriptionFileData,\n\t\t\t\t\t\"name\"\n\t\t\t\t);\n\t\t\t\tif (typeof name !== \"string\") return callback();\n\n\t\t\t\tif (\n\t\t\t\t\treq.startsWith(name) &&\n\t\t\t\t\t(req.length === name.length ||\n\t\t\t\t\t\treq.charCodeAt(name.length) === slashCode)\n\t\t\t\t) {\n\t\t\t\t\tconst remainingRequest = `.${req.slice(name.length)}`;\n\n\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t...request,\n\t\t\t\t\t\trequest: remainingRequest,\n\t\t\t\t\t\tpath: /** @type {string} */ (request.descriptionFileRoot),\n\t\t\t\t\t\trelativePath: \".\"\n\t\t\t\t\t};\n\n\t\t\t\t\tresolver.doResolve(\n\t\t\t\t\t\ttarget,\n\t\t\t\t\t\tobj,\n\t\t\t\t\t\t\"self reference\",\n\t\t\t\t\t\tresolveContext,\n\t\t\t\t\t\tcallback\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\t\t\t});\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst forEachBail = require(\"./forEachBail\");\nconst getPaths = require(\"./getPaths\");\nconst { getType, PathType } = require(\"./util/path\");\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\nmodule.exports = class SymlinkPlugin {\n\t/**\n\t * @param {string | ResolveStepHook} source source\n\t * @param {string | ResolveStepHook} target target\n\t */\n\tconstructor(source, target) {\n\t\tthis.source = source;\n\t\tthis.target = target;\n\t}\n\n\t/**\n\t * @param {Resolver} resolver the resolver\n\t * @returns {void}\n\t */\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tconst fs = resolver.fileSystem;\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"SymlinkPlugin\", (request, resolveContext, callback) => {\n\t\t\t\tif (request.ignoreSymlinks) return callback();\n\t\t\t\tconst pathsResult = getPaths(request.path);\n\t\t\t\tconst pathSegments = pathsResult.segments;\n\t\t\t\tconst paths = pathsResult.paths;\n\n\t\t\t\tlet containsSymlink = false;\n\t\t\t\tlet idx = -1;\n\t\t\t\tforEachBail(\n\t\t\t\t\tpaths,\n\t\t\t\t\t(path, callback) => {\n\t\t\t\t\t\tidx++;\n\t\t\t\t\t\tif (resolveContext.fileDependencies)\n\t\t\t\t\t\t\tresolveContext.fileDependencies.add(path);\n\t\t\t\t\t\tfs.readlink(path, (err, result) => {\n\t\t\t\t\t\t\tif (!err && result) {\n\t\t\t\t\t\t\t\tpathSegments[idx] = result;\n\t\t\t\t\t\t\t\tcontainsSymlink = true;\n\t\t\t\t\t\t\t\t// Shortcut when absolute symlink found\n\t\t\t\t\t\t\t\tconst resultType = getType(result.toString());\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\tresultType === PathType.AbsoluteWin ||\n\t\t\t\t\t\t\t\t\tresultType === PathType.AbsolutePosix\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\treturn callback(null, idx);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcallback();\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\t(err, idx) => {\n\t\t\t\t\t\tif (!containsSymlink) return callback();\n\t\t\t\t\t\tconst resultSegments =\n\t\t\t\t\t\t\ttypeof idx === \"number\"\n\t\t\t\t\t\t\t\t? pathSegments.slice(0, idx + 1)\n\t\t\t\t\t\t\t\t: pathSegments.slice();\n\t\t\t\t\t\tconst result = resultSegments.reduceRight((a, b) => {\n\t\t\t\t\t\t\treturn resolver.join(a, b);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t\t...request,\n\t\t\t\t\t\t\tpath: result\n\t\t\t\t\t\t};\n\t\t\t\t\t\tresolver.doResolve(\n\t\t\t\t\t\t\ttarget,\n\t\t\t\t\t\t\tobj,\n\t\t\t\t\t\t\t\"resolved symlink to \" + result,\n\t\t\t\t\t\t\tresolveContext,\n\t\t\t\t\t\t\tcallback\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t});\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Resolver\").FileSystem} FileSystem */\n/** @typedef {import(\"./Resolver\").SyncFileSystem} SyncFileSystem */\n\n/**\n * @param {SyncFileSystem} fs file system implementation\n * @constructor\n */\nfunction SyncAsyncFileSystemDecorator(fs) {\n\tthis.fs = fs;\n\n\tthis.lstat = undefined;\n\tthis.lstatSync = undefined;\n\tconst lstatSync = fs.lstatSync;\n\tif (lstatSync) {\n\t\tthis.lstat = (arg, options, callback) => {\n\t\t\tlet result;\n\t\t\ttry {\n\t\t\t\tresult = lstatSync.call(fs, arg);\n\t\t\t} catch (e) {\n\t\t\t\treturn (callback || options)(e);\n\t\t\t}\n\t\t\t(callback || options)(null, result);\n\t\t};\n\t\tthis.lstatSync = (arg, options) => lstatSync.call(fs, arg, options);\n\t}\n\n\tthis.stat = (arg, options, callback) => {\n\t\tlet result;\n\t\ttry {\n\t\t\tresult = callback ? fs.statSync(arg, options) : fs.statSync(arg);\n\t\t} catch (e) {\n\t\t\treturn (callback || options)(e);\n\t\t}\n\t\t(callback || options)(null, result);\n\t};\n\tthis.statSync = (arg, options) => fs.statSync(arg, options);\n\n\tthis.readdir = (arg, options, callback) => {\n\t\tlet result;\n\t\ttry {\n\t\t\tresult = fs.readdirSync(arg);\n\t\t} catch (e) {\n\t\t\treturn (callback || options)(e);\n\t\t}\n\t\t(callback || options)(null, result);\n\t};\n\tthis.readdirSync = (arg, options) => fs.readdirSync(arg, options);\n\n\tthis.readFile = (arg, options, callback) => {\n\t\tlet result;\n\t\ttry {\n\t\t\tresult = fs.readFileSync(arg);\n\t\t} catch (e) {\n\t\t\treturn (callback || options)(e);\n\t\t}\n\t\t(callback || options)(null, result);\n\t};\n\tthis.readFileSync = (arg, options) => fs.readFileSync(arg, options);\n\n\tthis.readlink = (arg, options, callback) => {\n\t\tlet result;\n\t\ttry {\n\t\t\tresult = fs.readlinkSync(arg);\n\t\t} catch (e) {\n\t\t\treturn (callback || options)(e);\n\t\t}\n\t\t(callback || options)(null, result);\n\t};\n\tthis.readlinkSync = (arg, options) => fs.readlinkSync(arg, options);\n\n\tthis.readJson = undefined;\n\tthis.readJsonSync = undefined;\n\tconst readJsonSync = fs.readJsonSync;\n\tif (readJsonSync) {\n\t\tthis.readJson = (arg, options, callback) => {\n\t\t\tlet result;\n\t\t\ttry {\n\t\t\t\tresult = readJsonSync.call(fs, arg);\n\t\t\t} catch (e) {\n\t\t\t\treturn (callback || options)(e);\n\t\t\t}\n\t\t\t(callback || options)(null, result);\n\t\t};\n\n\t\tthis.readJsonSync = (arg, options) => readJsonSync.call(fs, arg, options);\n\t}\n}\nmodule.exports = SyncAsyncFileSystemDecorator;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\nmodule.exports = class TryNextPlugin {\n\t/**\n\t * @param {string | ResolveStepHook} source source\n\t * @param {string} message message\n\t * @param {string | ResolveStepHook} target target\n\t */\n\tconstructor(source, message, target) {\n\t\tthis.source = source;\n\t\tthis.message = message;\n\t\tthis.target = target;\n\t}\n\n\t/**\n\t * @param {Resolver} resolver the resolver\n\t * @returns {void}\n\t */\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"TryNextPlugin\", (request, resolveContext, callback) => {\n\t\t\t\tresolver.doResolve(\n\t\t\t\t\ttarget,\n\t\t\t\t\trequest,\n\t\t\t\t\tthis.message,\n\t\t\t\t\tresolveContext,\n\t\t\t\t\tcallback\n\t\t\t\t);\n\t\t\t});\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveRequest} ResolveRequest */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n/** @typedef {{[k: string]: any}} Cache */\n\nfunction getCacheId(type, request, withContext) {\n\treturn JSON.stringify({\n\t\ttype,\n\t\tcontext: withContext ? request.context : \"\",\n\t\tpath: request.path,\n\t\tquery: request.query,\n\t\tfragment: request.fragment,\n\t\trequest: request.request\n\t});\n}\n\nmodule.exports = class UnsafeCachePlugin {\n\t/**\n\t * @param {string | ResolveStepHook} source source\n\t * @param {function(ResolveRequest): boolean} filterPredicate filterPredicate\n\t * @param {Cache} cache cache\n\t * @param {boolean} withContext withContext\n\t * @param {string | ResolveStepHook} target target\n\t */\n\tconstructor(source, filterPredicate, cache, withContext, target) {\n\t\tthis.source = source;\n\t\tthis.filterPredicate = filterPredicate;\n\t\tthis.withContext = withContext;\n\t\tthis.cache = cache;\n\t\tthis.target = target;\n\t}\n\n\t/**\n\t * @param {Resolver} resolver the resolver\n\t * @returns {void}\n\t */\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"UnsafeCachePlugin\", (request, resolveContext, callback) => {\n\t\t\t\tif (!this.filterPredicate(request)) return callback();\n\t\t\t\tconst isYield = typeof resolveContext.yield === \"function\";\n\t\t\t\tconst cacheId = getCacheId(\n\t\t\t\t\tisYield ? \"yield\" : \"default\",\n\t\t\t\t\trequest,\n\t\t\t\t\tthis.withContext\n\t\t\t\t);\n\t\t\t\tconst cacheEntry = this.cache[cacheId];\n\t\t\t\tif (cacheEntry) {\n\t\t\t\t\tif (isYield) {\n\t\t\t\t\t\tconst yield_ = /** @type {Function} */ (resolveContext.yield);\n\t\t\t\t\t\tif (Array.isArray(cacheEntry)) {\n\t\t\t\t\t\t\tfor (const result of cacheEntry) yield_(result);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tyield_(cacheEntry);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn callback(null, null);\n\t\t\t\t\t}\n\t\t\t\t\treturn callback(null, cacheEntry);\n\t\t\t\t}\n\n\t\t\t\tlet yieldFn;\n\t\t\t\tlet yield_;\n\t\t\t\tconst yieldResult = [];\n\t\t\t\tif (isYield) {\n\t\t\t\t\tyieldFn = resolveContext.yield;\n\t\t\t\t\tyield_ = result => {\n\t\t\t\t\t\tyieldResult.push(result);\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tresolver.doResolve(\n\t\t\t\t\ttarget,\n\t\t\t\t\trequest,\n\t\t\t\t\tnull,\n\t\t\t\t\tyield_ ? { ...resolveContext, yield: yield_ } : resolveContext,\n\t\t\t\t\t(err, result) => {\n\t\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\t\tif (isYield) {\n\t\t\t\t\t\t\tif (result) yieldResult.push(result);\n\t\t\t\t\t\t\tfor (const result of yieldResult) yieldFn(result);\n\t\t\t\t\t\t\tthis.cache[cacheId] = yieldResult;\n\t\t\t\t\t\t\treturn callback(null, null);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (result) return callback(null, (this.cache[cacheId] = result));\n\t\t\t\t\t\tcallback();\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t});\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\nmodule.exports = class UseFilePlugin {\n\t/**\n\t * @param {string | ResolveStepHook} source source\n\t * @param {string} filename filename\n\t * @param {string | ResolveStepHook} target target\n\t */\n\tconstructor(source, filename, target) {\n\t\tthis.source = source;\n\t\tthis.filename = filename;\n\t\tthis.target = target;\n\t}\n\n\t/**\n\t * @param {Resolver} resolver the resolver\n\t * @returns {void}\n\t */\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"UseFilePlugin\", (request, resolveContext, callback) => {\n\t\t\t\tconst filePath = resolver.join(request.path, this.filename);\n\t\t\t\tconst obj = {\n\t\t\t\t\t...request,\n\t\t\t\t\tpath: filePath,\n\t\t\t\t\trelativePath:\n\t\t\t\t\t\trequest.relativePath &&\n\t\t\t\t\t\tresolver.join(request.relativePath, this.filename)\n\t\t\t\t};\n\t\t\t\tresolver.doResolve(\n\t\t\t\t\ttarget,\n\t\t\t\t\tobj,\n\t\t\t\t\t\"using path: \" + filePath,\n\t\t\t\t\tresolveContext,\n\t\t\t\t\tcallback\n\t\t\t\t);\n\t\t\t});\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nmodule.exports = function createInnerContext(\n\toptions,\n\tmessage,\n\tmessageOptional\n) {\n\tlet messageReported = false;\n\tlet innerLog = undefined;\n\tif (options.log) {\n\t\tif (message) {\n\t\t\tinnerLog = msg => {\n\t\t\t\tif (!messageReported) {\n\t\t\t\t\toptions.log(message);\n\t\t\t\t\tmessageReported = true;\n\t\t\t\t}\n\t\t\t\toptions.log(\"  \" + msg);\n\t\t\t};\n\t\t} else {\n\t\t\tinnerLog = options.log;\n\t\t}\n\t}\n\tconst childContext = {\n\t\tlog: innerLog,\n\t\tyield: options.yield,\n\t\tfileDependencies: options.fileDependencies,\n\t\tcontextDependencies: options.contextDependencies,\n\t\tmissingDependencies: options.missingDependencies,\n\t\tstack: options.stack\n\t};\n\treturn childContext;\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nmodule.exports = function forEachBail(array, iterator, callback) {\n\tif (array.length === 0) return callback();\n\n\tlet i = 0;\n\tconst next = () => {\n\t\tlet loop = undefined;\n\t\titerator(array[i++], (err, result) => {\n\t\t\tif (err || result !== undefined || i >= array.length) {\n\t\t\t\treturn callback(err, result);\n\t\t\t}\n\t\t\tif (loop === false) while (next());\n\t\t\tloop = true;\n\t\t});\n\t\tif (!loop) loop = false;\n\t\treturn loop;\n\t};\n\twhile (next());\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nmodule.exports = function getInnerRequest(resolver, request) {\n\tif (\n\t\ttypeof request.__innerRequest === \"string\" &&\n\t\trequest.__innerRequest_request === request.request &&\n\t\trequest.__innerRequest_relativePath === request.relativePath\n\t)\n\t\treturn request.__innerRequest;\n\tlet innerRequest;\n\tif (request.request) {\n\t\tinnerRequest = request.request;\n\t\tif (/^\\.\\.?(?:\\/|$)/.test(innerRequest) && request.relativePath) {\n\t\t\tinnerRequest = resolver.join(request.relativePath, innerRequest);\n\t\t}\n\t} else {\n\t\tinnerRequest = request.relativePath;\n\t}\n\trequest.__innerRequest_request = request.request;\n\trequest.__innerRequest_relativePath = request.relativePath;\n\treturn (request.__innerRequest = innerRequest);\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nmodule.exports = function getPaths(path) {\n\tif (path === \"/\") return { paths: [\"/\"], segments: [\"\"] };\n\tconst parts = path.split(/(.*?[\\\\/]+)/);\n\tconst paths = [path];\n\tconst segments = [parts[parts.length - 1]];\n\tlet part = parts[parts.length - 1];\n\tpath = path.substr(0, path.length - part.length - 1);\n\tfor (let i = parts.length - 2; i > 2; i -= 2) {\n\t\tpaths.push(path);\n\t\tpart = parts[i];\n\t\tpath = path.substr(0, path.length - part.length) || \"/\";\n\t\tsegments.push(part.substr(0, part.length - 1));\n\t}\n\tpart = parts[1];\n\tsegments.push(part);\n\tpaths.push(part);\n\treturn {\n\t\tpaths: paths,\n\t\tsegments: segments\n\t};\n};\n\nmodule.exports.basename = function basename(path) {\n\tconst i = path.lastIndexOf(\"/\"),\n\t\tj = path.lastIndexOf(\"\\\\\");\n\tconst p = i < 0 ? j : j < 0 ? i : i < j ? j : i;\n\tif (p < 0) return null;\n\tconst s = path.substr(p + 1);\n\treturn s;\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst fs = require(\"graceful-fs\");\nconst CachedInputFileSystem = require(\"./CachedInputFileSystem\");\nconst ResolverFactory = require(\"./ResolverFactory\");\n\n/** @typedef {import(\"./PnpPlugin\").PnpApiImpl} PnpApi */\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").FileSystem} FileSystem */\n/** @typedef {import(\"./Resolver\").ResolveContext} ResolveContext */\n/** @typedef {import(\"./Resolver\").ResolveRequest} ResolveRequest */\n/** @typedef {import(\"./ResolverFactory\").Plugin} Plugin */\n/** @typedef {import(\"./ResolverFactory\").UserResolveOptions} ResolveOptions */\n\nconst nodeFileSystem = new CachedInputFileSystem(fs, 4000);\n\nconst nodeContext = {\n\tenvironments: [\"node+es3+es5+process+native\"]\n};\n\nconst asyncResolver = ResolverFactory.createResolver({\n\tconditionNames: [\"node\"],\n\textensions: [\".js\", \".json\", \".node\"],\n\tfileSystem: nodeFileSystem\n});\nfunction resolve(context, path, request, resolveContext, callback) {\n\tif (typeof context === \"string\") {\n\t\tcallback = resolveContext;\n\t\tresolveContext = request;\n\t\trequest = path;\n\t\tpath = context;\n\t\tcontext = nodeContext;\n\t}\n\tif (typeof callback !== \"function\") {\n\t\tcallback = resolveContext;\n\t}\n\tasyncResolver.resolve(context, path, request, resolveContext, callback);\n}\n\nconst syncResolver = ResolverFactory.createResolver({\n\tconditionNames: [\"node\"],\n\textensions: [\".js\", \".json\", \".node\"],\n\tuseSyncFileSystemCalls: true,\n\tfileSystem: nodeFileSystem\n});\nfunction resolveSync(context, path, request) {\n\tif (typeof context === \"string\") {\n\t\trequest = path;\n\t\tpath = context;\n\t\tcontext = nodeContext;\n\t}\n\treturn syncResolver.resolveSync(context, path, request);\n}\n\nfunction create(options) {\n\toptions = {\n\t\tfileSystem: nodeFileSystem,\n\t\t...options\n\t};\n\tconst resolver = ResolverFactory.createResolver(options);\n\treturn function (context, path, request, resolveContext, callback) {\n\t\tif (typeof context === \"string\") {\n\t\t\tcallback = resolveContext;\n\t\t\tresolveContext = request;\n\t\t\trequest = path;\n\t\t\tpath = context;\n\t\t\tcontext = nodeContext;\n\t\t}\n\t\tif (typeof callback !== \"function\") {\n\t\t\tcallback = resolveContext;\n\t\t}\n\t\tresolver.resolve(context, path, request, resolveContext, callback);\n\t};\n}\n\nfunction createSync(options) {\n\toptions = {\n\t\tuseSyncFileSystemCalls: true,\n\t\tfileSystem: nodeFileSystem,\n\t\t...options\n\t};\n\tconst resolver = ResolverFactory.createResolver(options);\n\treturn function (context, path, request) {\n\t\tif (typeof context === \"string\") {\n\t\t\trequest = path;\n\t\t\tpath = context;\n\t\t\tcontext = nodeContext;\n\t\t}\n\t\treturn resolver.resolveSync(context, path, request);\n\t};\n}\n\n/**\n * @template A\n * @template B\n * @param {A} obj input a\n * @param {B} exports input b\n * @returns {A & B} merged\n */\nconst mergeExports = (obj, exports) => {\n\tconst descriptors = Object.getOwnPropertyDescriptors(exports);\n\tObject.defineProperties(obj, descriptors);\n\treturn /** @type {A & B} */ (Object.freeze(obj));\n};\n\nmodule.exports = mergeExports(resolve, {\n\tget sync() {\n\t\treturn resolveSync;\n\t},\n\tcreate: mergeExports(create, {\n\t\tget sync() {\n\t\t\treturn createSync;\n\t\t}\n\t}),\n\tResolverFactory,\n\tCachedInputFileSystem,\n\tget CloneBasenamePlugin() {\n\t\treturn require(\"./CloneBasenamePlugin\");\n\t},\n\tget LogInfoPlugin() {\n\t\treturn require(\"./LogInfoPlugin\");\n\t},\n\tget forEachBail() {\n\t\treturn require(\"./forEachBail\");\n\t}\n});\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\n\"use strict\";\n\n/** @typedef {string|(string|ConditionalMapping)[]} DirectMapping */\n/** @typedef {{[k: string]: MappingValue}} ConditionalMapping */\n/** @typedef {ConditionalMapping|DirectMapping|null} MappingValue */\n/** @typedef {Record<string, MappingValue>|ConditionalMapping|DirectMapping} ExportsField */\n/** @typedef {Record<string, MappingValue>} ImportsField */\n\n/**\n * @typedef {Object} PathTreeNode\n * @property {Map<string, PathTreeNode>|null} children\n * @property {MappingValue} folder\n * @property {Map<string, MappingValue>|null} wildcards\n * @property {Map<string, MappingValue>} files\n */\n\n/**\n * Processing exports/imports field\n * @callback FieldProcessor\n * @param {string} request request\n * @param {Set<string>} conditionNames condition names\n * @returns {string[]} resolved paths\n */\n\n/*\nExample exports field:\n{\n  \".\": \"./main.js\",\n  \"./feature\": {\n    \"browser\": \"./feature-browser.js\",\n    \"default\": \"./feature.js\"\n  }\n}\nTerminology:\n\nEnhanced-resolve name keys (\".\" and \"./feature\") as exports field keys.\n\nIf value is string or string[], mapping is called as a direct mapping\nand value called as a direct export.\n\nIf value is key-value object, mapping is called as a conditional mapping\nand value called as a conditional export.\n\nKey in conditional mapping is called condition name.\n\nConditional mapping nested in another conditional mapping is called nested mapping.\n\n----------\n\nExample imports field:\n{\n  \"#a\": \"./main.js\",\n  \"#moment\": {\n    \"browser\": \"./moment/index.js\",\n    \"default\": \"moment\"\n  },\n  \"#moment/\": {\n    \"browser\": \"./moment/\",\n    \"default\": \"moment/\"\n  }\n}\nTerminology:\n\nEnhanced-resolve name keys (\"#a\" and \"#moment/\", \"#moment\") as imports field keys.\n\nIf value is string or string[], mapping is called as a direct mapping\nand value called as a direct export.\n\nIf value is key-value object, mapping is called as a conditional mapping\nand value called as a conditional export.\n\nKey in conditional mapping is called condition name.\n\nConditional mapping nested in another conditional mapping is called nested mapping.\n\n*/\n\nconst slashCode = \"/\".charCodeAt(0);\nconst dotCode = \".\".charCodeAt(0);\nconst hashCode = \"#\".charCodeAt(0);\n\n/**\n * @param {ExportsField} exportsField the exports field\n * @returns {FieldProcessor} process callback\n */\nmodule.exports.processExportsField = function processExportsField(\n\texportsField\n) {\n\treturn createFieldProcessor(\n\t\tbuildExportsFieldPathTree(exportsField),\n\t\tassertExportsFieldRequest,\n\t\tassertExportTarget\n\t);\n};\n\n/**\n * @param {ImportsField} importsField the exports field\n * @returns {FieldProcessor} process callback\n */\nmodule.exports.processImportsField = function processImportsField(\n\timportsField\n) {\n\treturn createFieldProcessor(\n\t\tbuildImportsFieldPathTree(importsField),\n\t\tassertImportsFieldRequest,\n\t\tassertImportTarget\n\t);\n};\n\n/**\n * @param {PathTreeNode} treeRoot root\n * @param {(s: string) => string} assertRequest assertRequest\n * @param {(s: string, f: boolean) => void} assertTarget assertTarget\n * @returns {FieldProcessor} field processor\n */\nfunction createFieldProcessor(treeRoot, assertRequest, assertTarget) {\n\treturn function fieldProcessor(request, conditionNames) {\n\t\trequest = assertRequest(request);\n\n\t\tconst match = findMatch(request, treeRoot);\n\n\t\tif (match === null) return [];\n\n\t\tconst [mapping, remainRequestIndex] = match;\n\n\t\t/** @type {DirectMapping|null} */\n\t\tlet direct = null;\n\n\t\tif (isConditionalMapping(mapping)) {\n\t\t\tdirect = conditionalMapping(\n\t\t\t\t/** @type {ConditionalMapping} */ (mapping),\n\t\t\t\tconditionNames\n\t\t\t);\n\n\t\t\t// matching not found\n\t\t\tif (direct === null) return [];\n\t\t} else {\n\t\t\tdirect = /** @type {DirectMapping} */ (mapping);\n\t\t}\n\n\t\tconst remainingRequest =\n\t\t\tremainRequestIndex === request.length + 1\n\t\t\t\t? undefined\n\t\t\t\t: remainRequestIndex < 0\n\t\t\t\t? request.slice(-remainRequestIndex - 1)\n\t\t\t\t: request.slice(remainRequestIndex);\n\n\t\treturn directMapping(\n\t\t\tremainingRequest,\n\t\t\tremainRequestIndex < 0,\n\t\t\tdirect,\n\t\t\tconditionNames,\n\t\t\tassertTarget\n\t\t);\n\t};\n}\n\n/**\n * @param {string} request request\n * @returns {string} updated request\n */\nfunction assertExportsFieldRequest(request) {\n\tif (request.charCodeAt(0) !== dotCode) {\n\t\tthrow new Error('Request should be relative path and start with \".\"');\n\t}\n\tif (request.length === 1) return \"\";\n\tif (request.charCodeAt(1) !== slashCode) {\n\t\tthrow new Error('Request should be relative path and start with \"./\"');\n\t}\n\tif (request.charCodeAt(request.length - 1) === slashCode) {\n\t\tthrow new Error(\"Only requesting file allowed\");\n\t}\n\n\treturn request.slice(2);\n}\n\n/**\n * @param {string} request request\n * @returns {string} updated request\n */\nfunction assertImportsFieldRequest(request) {\n\tif (request.charCodeAt(0) !== hashCode) {\n\t\tthrow new Error('Request should start with \"#\"');\n\t}\n\tif (request.length === 1) {\n\t\tthrow new Error(\"Request should have at least 2 characters\");\n\t}\n\tif (request.charCodeAt(1) === slashCode) {\n\t\tthrow new Error('Request should not start with \"#/\"');\n\t}\n\tif (request.charCodeAt(request.length - 1) === slashCode) {\n\t\tthrow new Error(\"Only requesting file allowed\");\n\t}\n\n\treturn request.slice(1);\n}\n\n/**\n * @param {string} exp export target\n * @param {boolean} expectFolder is folder expected\n */\nfunction assertExportTarget(exp, expectFolder) {\n\tif (\n\t\texp.charCodeAt(0) === slashCode ||\n\t\t(exp.charCodeAt(0) === dotCode && exp.charCodeAt(1) !== slashCode)\n\t) {\n\t\tthrow new Error(\n\t\t\t`Export should be relative path and start with \"./\", got ${JSON.stringify(\n\t\t\t\texp\n\t\t\t)}.`\n\t\t);\n\t}\n\n\tconst isFolder = exp.charCodeAt(exp.length - 1) === slashCode;\n\n\tif (isFolder !== expectFolder) {\n\t\tthrow new Error(\n\t\t\texpectFolder\n\t\t\t\t? `Expecting folder to folder mapping. ${JSON.stringify(\n\t\t\t\t\t\texp\n\t\t\t\t  )} should end with \"/\"`\n\t\t\t\t: `Expecting file to file mapping. ${JSON.stringify(\n\t\t\t\t\t\texp\n\t\t\t\t  )} should not end with \"/\"`\n\t\t);\n\t}\n}\n\n/**\n * @param {string} imp import target\n * @param {boolean} expectFolder is folder expected\n */\nfunction assertImportTarget(imp, expectFolder) {\n\tconst isFolder = imp.charCodeAt(imp.length - 1) === slashCode;\n\n\tif (isFolder !== expectFolder) {\n\t\tthrow new Error(\n\t\t\texpectFolder\n\t\t\t\t? `Expecting folder to folder mapping. ${JSON.stringify(\n\t\t\t\t\t\timp\n\t\t\t\t  )} should end with \"/\"`\n\t\t\t\t: `Expecting file to file mapping. ${JSON.stringify(\n\t\t\t\t\t\timp\n\t\t\t\t  )} should not end with \"/\"`\n\t\t);\n\t}\n}\n\n/**\n * Trying to match request to field\n * @param {string} request request\n * @param {PathTreeNode} treeRoot path tree root\n * @returns {[MappingValue, number]|null} match or null, number is negative and one less when it's a folder mapping, number is request.length + 1 for direct mappings\n */\nfunction findMatch(request, treeRoot) {\n\tif (request.length === 0) {\n\t\tconst value = treeRoot.files.get(\"\");\n\n\t\treturn value ? [value, 1] : null;\n\t}\n\n\tif (\n\t\ttreeRoot.children === null &&\n\t\ttreeRoot.folder === null &&\n\t\ttreeRoot.wildcards === null\n\t) {\n\t\tconst value = treeRoot.files.get(request);\n\n\t\treturn value ? [value, request.length + 1] : null;\n\t}\n\n\tlet node = treeRoot;\n\tlet lastNonSlashIndex = 0;\n\tlet slashIndex = request.indexOf(\"/\", 0);\n\n\t/** @type {[MappingValue, number]|null} */\n\tlet lastFolderMatch = null;\n\n\tconst applyFolderMapping = () => {\n\t\tconst folderMapping = node.folder;\n\t\tif (folderMapping) {\n\t\t\tif (lastFolderMatch) {\n\t\t\t\tlastFolderMatch[0] = folderMapping;\n\t\t\t\tlastFolderMatch[1] = -lastNonSlashIndex - 1;\n\t\t\t} else {\n\t\t\t\tlastFolderMatch = [folderMapping, -lastNonSlashIndex - 1];\n\t\t\t}\n\t\t}\n\t};\n\n\tconst applyWildcardMappings = (wildcardMappings, remainingRequest) => {\n\t\tif (wildcardMappings) {\n\t\t\tfor (const [key, target] of wildcardMappings) {\n\t\t\t\tif (remainingRequest.startsWith(key)) {\n\t\t\t\t\tif (!lastFolderMatch) {\n\t\t\t\t\t\tlastFolderMatch = [target, lastNonSlashIndex + key.length];\n\t\t\t\t\t} else if (lastFolderMatch[1] < lastNonSlashIndex + key.length) {\n\t\t\t\t\t\tlastFolderMatch[0] = target;\n\t\t\t\t\t\tlastFolderMatch[1] = lastNonSlashIndex + key.length;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\twhile (slashIndex !== -1) {\n\t\tapplyFolderMapping();\n\n\t\tconst wildcardMappings = node.wildcards;\n\n\t\tif (!wildcardMappings && node.children === null) return lastFolderMatch;\n\n\t\tconst folder = request.slice(lastNonSlashIndex, slashIndex);\n\n\t\tapplyWildcardMappings(wildcardMappings, folder);\n\n\t\tif (node.children === null) return lastFolderMatch;\n\n\t\tconst newNode = node.children.get(folder);\n\n\t\tif (!newNode) {\n\t\t\treturn lastFolderMatch;\n\t\t}\n\n\t\tnode = newNode;\n\t\tlastNonSlashIndex = slashIndex + 1;\n\t\tslashIndex = request.indexOf(\"/\", lastNonSlashIndex);\n\t}\n\n\tconst remainingRequest =\n\t\tlastNonSlashIndex > 0 ? request.slice(lastNonSlashIndex) : request;\n\n\tconst value = node.files.get(remainingRequest);\n\n\tif (value) {\n\t\treturn [value, request.length + 1];\n\t}\n\n\tapplyFolderMapping();\n\n\tapplyWildcardMappings(node.wildcards, remainingRequest);\n\n\treturn lastFolderMatch;\n}\n\n/**\n * @param {ConditionalMapping|DirectMapping|null} mapping mapping\n * @returns {boolean} is conditional mapping\n */\nfunction isConditionalMapping(mapping) {\n\treturn (\n\t\tmapping !== null && typeof mapping === \"object\" && !Array.isArray(mapping)\n\t);\n}\n\n/**\n * @param {string|undefined} remainingRequest remaining request when folder mapping, undefined for file mappings\n * @param {boolean} subpathMapping true, for subpath mappings\n * @param {DirectMapping|null} mappingTarget direct export\n * @param {Set<string>} conditionNames condition names\n * @param {(d: string, f: boolean) => void} assert asserting direct value\n * @returns {string[]} mapping result\n */\nfunction directMapping(\n\tremainingRequest,\n\tsubpathMapping,\n\tmappingTarget,\n\tconditionNames,\n\tassert\n) {\n\tif (mappingTarget === null) return [];\n\n\tif (typeof mappingTarget === \"string\") {\n\t\treturn [\n\t\t\ttargetMapping(remainingRequest, subpathMapping, mappingTarget, assert)\n\t\t];\n\t}\n\n\tconst targets = [];\n\n\tfor (const exp of mappingTarget) {\n\t\tif (typeof exp === \"string\") {\n\t\t\ttargets.push(\n\t\t\t\ttargetMapping(remainingRequest, subpathMapping, exp, assert)\n\t\t\t);\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst mapping = conditionalMapping(exp, conditionNames);\n\t\tif (!mapping) continue;\n\t\tconst innerExports = directMapping(\n\t\t\tremainingRequest,\n\t\t\tsubpathMapping,\n\t\t\tmapping,\n\t\t\tconditionNames,\n\t\t\tassert\n\t\t);\n\t\tfor (const innerExport of innerExports) {\n\t\t\ttargets.push(innerExport);\n\t\t}\n\t}\n\n\treturn targets;\n}\n\n/**\n * @param {string|undefined} remainingRequest remaining request when folder mapping, undefined for file mappings\n * @param {boolean} subpathMapping true, for subpath mappings\n * @param {string} mappingTarget direct export\n * @param {(d: string, f: boolean) => void} assert asserting direct value\n * @returns {string} mapping result\n */\nfunction targetMapping(\n\tremainingRequest,\n\tsubpathMapping,\n\tmappingTarget,\n\tassert\n) {\n\tif (remainingRequest === undefined) {\n\t\tassert(mappingTarget, false);\n\t\treturn mappingTarget;\n\t}\n\tif (subpathMapping) {\n\t\tassert(mappingTarget, true);\n\t\treturn mappingTarget + remainingRequest;\n\t}\n\tassert(mappingTarget, false);\n\treturn mappingTarget.replace(/\\*/g, remainingRequest.replace(/\\$/g, \"$$\"));\n}\n\n/**\n * @param {ConditionalMapping} conditionalMapping_ conditional mapping\n * @param {Set<string>} conditionNames condition names\n * @returns {DirectMapping|null} direct mapping if found\n */\nfunction conditionalMapping(conditionalMapping_, conditionNames) {\n\t/** @type {[ConditionalMapping, string[], number][]} */\n\tlet lookup = [[conditionalMapping_, Object.keys(conditionalMapping_), 0]];\n\n\tloop: while (lookup.length > 0) {\n\t\tconst [mapping, conditions, j] = lookup[lookup.length - 1];\n\t\tconst last = conditions.length - 1;\n\n\t\tfor (let i = j; i < conditions.length; i++) {\n\t\t\tconst condition = conditions[i];\n\n\t\t\t// assert default. Could be last only\n\t\t\tif (i !== last) {\n\t\t\t\tif (condition === \"default\") {\n\t\t\t\t\tthrow new Error(\"Default condition should be last one\");\n\t\t\t\t}\n\t\t\t} else if (condition === \"default\") {\n\t\t\t\tconst innerMapping = mapping[condition];\n\t\t\t\t// is nested\n\t\t\t\tif (isConditionalMapping(innerMapping)) {\n\t\t\t\t\tconst conditionalMapping = /** @type {ConditionalMapping} */ (innerMapping);\n\t\t\t\t\tlookup[lookup.length - 1][2] = i + 1;\n\t\t\t\t\tlookup.push([conditionalMapping, Object.keys(conditionalMapping), 0]);\n\t\t\t\t\tcontinue loop;\n\t\t\t\t}\n\n\t\t\t\treturn /** @type {DirectMapping} */ (innerMapping);\n\t\t\t}\n\n\t\t\tif (conditionNames.has(condition)) {\n\t\t\t\tconst innerMapping = mapping[condition];\n\t\t\t\t// is nested\n\t\t\t\tif (isConditionalMapping(innerMapping)) {\n\t\t\t\t\tconst conditionalMapping = /** @type {ConditionalMapping} */ (innerMapping);\n\t\t\t\t\tlookup[lookup.length - 1][2] = i + 1;\n\t\t\t\t\tlookup.push([conditionalMapping, Object.keys(conditionalMapping), 0]);\n\t\t\t\t\tcontinue loop;\n\t\t\t\t}\n\n\t\t\t\treturn /** @type {DirectMapping} */ (innerMapping);\n\t\t\t}\n\t\t}\n\n\t\tlookup.pop();\n\t}\n\n\treturn null;\n}\n\n/**\n * Internal helper to create path tree node\n * to ensure that each node gets the same hidden class\n * @returns {PathTreeNode} node\n */\nfunction createNode() {\n\treturn {\n\t\tchildren: null,\n\t\tfolder: null,\n\t\twildcards: null,\n\t\tfiles: new Map()\n\t};\n}\n\n/**\n * Internal helper for building path tree\n * @param {PathTreeNode} root root\n * @param {string} path path\n * @param {MappingValue} target target\n */\nfunction walkPath(root, path, target) {\n\tif (path.length === 0) {\n\t\troot.folder = target;\n\t\treturn;\n\t}\n\n\tlet node = root;\n\t// Typical path tree can looks like\n\t// root\n\t// - files: [\"a.js\", \"b.js\"]\n\t// - children:\n\t//    node1:\n\t//    - files: [\"a.js\", \"b.js\"]\n\tlet lastNonSlashIndex = 0;\n\tlet slashIndex = path.indexOf(\"/\", 0);\n\n\twhile (slashIndex !== -1) {\n\t\tconst folder = path.slice(lastNonSlashIndex, slashIndex);\n\t\tlet newNode;\n\n\t\tif (node.children === null) {\n\t\t\tnewNode = createNode();\n\t\t\tnode.children = new Map();\n\t\t\tnode.children.set(folder, newNode);\n\t\t} else {\n\t\t\tnewNode = node.children.get(folder);\n\n\t\t\tif (!newNode) {\n\t\t\t\tnewNode = createNode();\n\t\t\t\tnode.children.set(folder, newNode);\n\t\t\t}\n\t\t}\n\n\t\tnode = newNode;\n\t\tlastNonSlashIndex = slashIndex + 1;\n\t\tslashIndex = path.indexOf(\"/\", lastNonSlashIndex);\n\t}\n\n\tif (lastNonSlashIndex >= path.length) {\n\t\tnode.folder = target;\n\t} else {\n\t\tconst file = lastNonSlashIndex > 0 ? path.slice(lastNonSlashIndex) : path;\n\t\tif (file.endsWith(\"*\")) {\n\t\t\tif (node.wildcards === null) node.wildcards = new Map();\n\t\t\tnode.wildcards.set(file.slice(0, -1), target);\n\t\t} else {\n\t\t\tnode.files.set(file, target);\n\t\t}\n\t}\n}\n\n/**\n * @param {ExportsField} field exports field\n * @returns {PathTreeNode} tree root\n */\nfunction buildExportsFieldPathTree(field) {\n\tconst root = createNode();\n\n\t// handle syntax sugar, if exports field is direct mapping for \".\"\n\tif (typeof field === \"string\") {\n\t\troot.files.set(\"\", field);\n\n\t\treturn root;\n\t} else if (Array.isArray(field)) {\n\t\troot.files.set(\"\", field.slice());\n\n\t\treturn root;\n\t}\n\n\tconst keys = Object.keys(field);\n\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tconst key = keys[i];\n\n\t\tif (key.charCodeAt(0) !== dotCode) {\n\t\t\t// handle syntax sugar, if exports field is conditional mapping for \".\"\n\t\t\tif (i === 0) {\n\t\t\t\twhile (i < keys.length) {\n\t\t\t\t\tconst charCode = keys[i].charCodeAt(0);\n\t\t\t\t\tif (charCode === dotCode || charCode === slashCode) {\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t`Exports field key should be relative path and start with \".\" (key: ${JSON.stringify(\n\t\t\t\t\t\t\t\tkey\n\t\t\t\t\t\t\t)})`\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\ti++;\n\t\t\t\t}\n\n\t\t\t\troot.files.set(\"\", field);\n\t\t\t\treturn root;\n\t\t\t}\n\n\t\t\tthrow new Error(\n\t\t\t\t`Exports field key should be relative path and start with \".\" (key: ${JSON.stringify(\n\t\t\t\t\tkey\n\t\t\t\t)})`\n\t\t\t);\n\t\t}\n\n\t\tif (key.length === 1) {\n\t\t\troot.files.set(\"\", field[key]);\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (key.charCodeAt(1) !== slashCode) {\n\t\t\tthrow new Error(\n\t\t\t\t`Exports field key should be relative path and start with \"./\" (key: ${JSON.stringify(\n\t\t\t\t\tkey\n\t\t\t\t)})`\n\t\t\t);\n\t\t}\n\n\t\twalkPath(root, key.slice(2), field[key]);\n\t}\n\n\treturn root;\n}\n\n/**\n * @param {ImportsField} field imports field\n * @returns {PathTreeNode} root\n */\nfunction buildImportsFieldPathTree(field) {\n\tconst root = createNode();\n\n\tconst keys = Object.keys(field);\n\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tconst key = keys[i];\n\n\t\tif (key.charCodeAt(0) !== hashCode) {\n\t\t\tthrow new Error(\n\t\t\t\t`Imports field key should start with \"#\" (key: ${JSON.stringify(key)})`\n\t\t\t);\n\t\t}\n\n\t\tif (key.length === 1) {\n\t\t\tthrow new Error(\n\t\t\t\t`Imports field key should have at least 2 characters (key: ${JSON.stringify(\n\t\t\t\t\tkey\n\t\t\t\t)})`\n\t\t\t);\n\t\t}\n\n\t\tif (key.charCodeAt(1) === slashCode) {\n\t\t\tthrow new Error(\n\t\t\t\t`Imports field key should not start with \"#/\" (key: ${JSON.stringify(\n\t\t\t\t\tkey\n\t\t\t\t)})`\n\t\t\t);\n\t\t}\n\n\t\twalkPath(root, key.slice(1), field[key]);\n\t}\n\n\treturn root;\n}\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\n\"use strict\";\n\nconst PATH_QUERY_FRAGMENT_REGEXP = /^(#?(?:\\0.|[^?#\\0])*)(\\?(?:\\0.|[^#\\0])*)?(#.*)?$/;\n\n/**\n * @param {string} identifier identifier\n * @returns {[string, string, string]|null} parsed identifier\n */\nfunction parseIdentifier(identifier) {\n\tconst match = PATH_QUERY_FRAGMENT_REGEXP.exec(identifier);\n\n\tif (!match) return null;\n\n\treturn [\n\t\tmatch[1].replace(/\\0(.)/g, \"$1\"),\n\t\tmatch[2] ? match[2].replace(/\\0(.)/g, \"$1\") : \"\",\n\t\tmatch[3] || \"\"\n\t];\n}\n\nmodule.exports.parseIdentifier = parseIdentifier;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst path = require(\"path\");\n\nconst CHAR_HASH = \"#\".charCodeAt(0);\nconst CHAR_SLASH = \"/\".charCodeAt(0);\nconst CHAR_BACKSLASH = \"\\\\\".charCodeAt(0);\nconst CHAR_A = \"A\".charCodeAt(0);\nconst CHAR_Z = \"Z\".charCodeAt(0);\nconst CHAR_LOWER_A = \"a\".charCodeAt(0);\nconst CHAR_LOWER_Z = \"z\".charCodeAt(0);\nconst CHAR_DOT = \".\".charCodeAt(0);\nconst CHAR_COLON = \":\".charCodeAt(0);\n\nconst posixNormalize = path.posix.normalize;\nconst winNormalize = path.win32.normalize;\n\n/**\n * @enum {number}\n */\nconst PathType = Object.freeze({\n\tEmpty: 0,\n\tNormal: 1,\n\tRelative: 2,\n\tAbsoluteWin: 3,\n\tAbsolutePosix: 4,\n\tInternal: 5\n});\nexports.PathType = PathType;\n\n/**\n * @param {string} p a path\n * @returns {PathType} type of path\n */\nconst getType = p => {\n\tswitch (p.length) {\n\t\tcase 0:\n\t\t\treturn PathType.Empty;\n\t\tcase 1: {\n\t\t\tconst c0 = p.charCodeAt(0);\n\t\t\tswitch (c0) {\n\t\t\t\tcase CHAR_DOT:\n\t\t\t\t\treturn PathType.Relative;\n\t\t\t\tcase CHAR_SLASH:\n\t\t\t\t\treturn PathType.AbsolutePosix;\n\t\t\t\tcase CHAR_HASH:\n\t\t\t\t\treturn PathType.Internal;\n\t\t\t}\n\t\t\treturn PathType.Normal;\n\t\t}\n\t\tcase 2: {\n\t\t\tconst c0 = p.charCodeAt(0);\n\t\t\tswitch (c0) {\n\t\t\t\tcase CHAR_DOT: {\n\t\t\t\t\tconst c1 = p.charCodeAt(1);\n\t\t\t\t\tswitch (c1) {\n\t\t\t\t\t\tcase CHAR_DOT:\n\t\t\t\t\t\tcase CHAR_SLASH:\n\t\t\t\t\t\t\treturn PathType.Relative;\n\t\t\t\t\t}\n\t\t\t\t\treturn PathType.Normal;\n\t\t\t\t}\n\t\t\t\tcase CHAR_SLASH:\n\t\t\t\t\treturn PathType.AbsolutePosix;\n\t\t\t\tcase CHAR_HASH:\n\t\t\t\t\treturn PathType.Internal;\n\t\t\t}\n\t\t\tconst c1 = p.charCodeAt(1);\n\t\t\tif (c1 === CHAR_COLON) {\n\t\t\t\tif (\n\t\t\t\t\t(c0 >= CHAR_A && c0 <= CHAR_Z) ||\n\t\t\t\t\t(c0 >= CHAR_LOWER_A && c0 <= CHAR_LOWER_Z)\n\t\t\t\t) {\n\t\t\t\t\treturn PathType.AbsoluteWin;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn PathType.Normal;\n\t\t}\n\t}\n\tconst c0 = p.charCodeAt(0);\n\tswitch (c0) {\n\t\tcase CHAR_DOT: {\n\t\t\tconst c1 = p.charCodeAt(1);\n\t\t\tswitch (c1) {\n\t\t\t\tcase CHAR_SLASH:\n\t\t\t\t\treturn PathType.Relative;\n\t\t\t\tcase CHAR_DOT: {\n\t\t\t\t\tconst c2 = p.charCodeAt(2);\n\t\t\t\t\tif (c2 === CHAR_SLASH) return PathType.Relative;\n\t\t\t\t\treturn PathType.Normal;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn PathType.Normal;\n\t\t}\n\t\tcase CHAR_SLASH:\n\t\t\treturn PathType.AbsolutePosix;\n\t\tcase CHAR_HASH:\n\t\t\treturn PathType.Internal;\n\t}\n\tconst c1 = p.charCodeAt(1);\n\tif (c1 === CHAR_COLON) {\n\t\tconst c2 = p.charCodeAt(2);\n\t\tif (\n\t\t\t(c2 === CHAR_BACKSLASH || c2 === CHAR_SLASH) &&\n\t\t\t((c0 >= CHAR_A && c0 <= CHAR_Z) ||\n\t\t\t\t(c0 >= CHAR_LOWER_A && c0 <= CHAR_LOWER_Z))\n\t\t) {\n\t\t\treturn PathType.AbsoluteWin;\n\t\t}\n\t}\n\treturn PathType.Normal;\n};\nexports.getType = getType;\n\n/**\n * @param {string} p a path\n * @returns {string} the normalized path\n */\nconst normalize = p => {\n\tswitch (getType(p)) {\n\t\tcase PathType.Empty:\n\t\t\treturn p;\n\t\tcase PathType.AbsoluteWin:\n\t\t\treturn winNormalize(p);\n\t\tcase PathType.Relative: {\n\t\t\tconst r = posixNormalize(p);\n\t\t\treturn getType(r) === PathType.Relative ? r : `./${r}`;\n\t\t}\n\t}\n\treturn posixNormalize(p);\n};\nexports.normalize = normalize;\n\n/**\n * @param {string} rootPath the root path\n * @param {string | undefined} request the request path\n * @returns {string} the joined path\n */\nconst join = (rootPath, request) => {\n\tif (!request) return normalize(rootPath);\n\tconst requestType = getType(request);\n\tswitch (requestType) {\n\t\tcase PathType.AbsolutePosix:\n\t\t\treturn posixNormalize(request);\n\t\tcase PathType.AbsoluteWin:\n\t\t\treturn winNormalize(request);\n\t}\n\tswitch (getType(rootPath)) {\n\t\tcase PathType.Normal:\n\t\tcase PathType.Relative:\n\t\tcase PathType.AbsolutePosix:\n\t\t\treturn posixNormalize(`${rootPath}/${request}`);\n\t\tcase PathType.AbsoluteWin:\n\t\t\treturn winNormalize(`${rootPath}\\\\${request}`);\n\t}\n\tswitch (requestType) {\n\t\tcase PathType.Empty:\n\t\t\treturn rootPath;\n\t\tcase PathType.Relative: {\n\t\t\tconst r = posixNormalize(rootPath);\n\t\t\treturn getType(r) === PathType.Relative ? r : `./${r}`;\n\t\t}\n\t}\n\treturn posixNormalize(rootPath);\n};\nexports.join = join;\n\nconst joinCache = new Map();\n\n/**\n * @param {string} rootPath the root path\n * @param {string | undefined} request the request path\n * @returns {string} the joined path\n */\nconst cachedJoin = (rootPath, request) => {\n\tlet cacheEntry;\n\tlet cache = joinCache.get(rootPath);\n\tif (cache === undefined) {\n\t\tjoinCache.set(rootPath, (cache = new Map()));\n\t} else {\n\t\tcacheEntry = cache.get(request);\n\t\tif (cacheEntry !== undefined) return cacheEntry;\n\t}\n\tcacheEntry = join(rootPath, request);\n\tcache.set(request, cacheEntry);\n\treturn cacheEntry;\n};\nexports.cachedJoin = cachedJoin;\n\nconst checkImportsExportsFieldTarget = relativePath => {\n\tlet lastNonSlashIndex = 0;\n\tlet slashIndex = relativePath.indexOf(\"/\", 1);\n\tlet cd = 0;\n\n\twhile (slashIndex !== -1) {\n\t\tconst folder = relativePath.slice(lastNonSlashIndex, slashIndex);\n\n\t\tswitch (folder) {\n\t\t\tcase \"..\": {\n\t\t\t\tcd--;\n\t\t\t\tif (cd < 0)\n\t\t\t\t\treturn new Error(\n\t\t\t\t\t\t`Trying to access out of package scope. Requesting ${relativePath}`\n\t\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \".\":\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tcd++;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tlastNonSlashIndex = slashIndex + 1;\n\t\tslashIndex = relativePath.indexOf(\"/\", lastNonSlashIndex);\n\t}\n};\nexports.checkImportsExportsFieldTarget = checkImportsExportsFieldTarget;\n","var x = y => { var x = {}; __webpack_require__.d(x, y); return x; }\nvar y = x => () => x\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__ease_js_deps_tapable_ce2c16a8__;","var x = y => { var x = {}; __webpack_require__.d(x, y); return x; }\nvar y = x => () => x\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_node_fs_1b05aee1__;","var x = y => { var x = {}; __webpack_require__.d(x, y); return x; }\nvar y = x => () => x\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_path__;","var x = y => { var x = {}; __webpack_require__.d(x, y); return x; }\nvar y = x => () => x\nmodule.exports = x({ [\"nextTick\"]: () => __WEBPACK_EXTERNAL_MODULE_process__.nextTick, [\"versions\"]: () => __WEBPACK_EXTERNAL_MODULE_process__.versions });","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))"],"names":["DescriptionFileUtils","getInnerRequest","module","exports","constructor","source","field","target","this","apply","resolver","ensureHook","getHook","tapAsync","request","resolveContext","callback","descriptionFileData","innerRequest","fieldData","getField","log","data","Object","prototype","hasOwnProperty","call","startsWith","slice","undefined","ignoreObj","path","yield","obj","descriptionFileRoot","fullySpecified","doResolve","descriptionFilePath","err","result","forEachBail","PathType","getType","options","Array","isArray","item","shouldStop","name","onlyModule","maybeSubPath","absolutePath","maybeAbsolutePath","type","AbsolutePosix","AbsoluteWin","join","getAbsolutePathWithSlashEnding","isSubPath","remainingRequest","substr","length","resolveWithAlias","alias","newRequestStr","stoppingCallback","appending","relativePath","nextTick","dirname","idx","c","charCodeAt","runCallbacks","callbacks","error","e","OperationMergerBackend","provider","syncProvider","providerContext","_provider","_syncProvider","_providerContext","_activeAsyncOperations","Map","provide","TypeError","get","push","set","delete","provideSync","purge","purgeParent","CacheBackend","duration","_duration","_data","_levels","i","Set","_currentLevel","_tickInterval","Math","floor","_mode","_timeout","_nextDecay","bind","_enterAsyncMode","cacheEntry","_storeResult","_runDecays","_enterSyncModeWhenIdle","what","key","level","size","_enterIdleMode","clear","add","has","_decayLevel","nextLevel","decay","Date","now","timeout","max","ref","setTimeout","unref","clearTimeout","createBackend","fileSystem","_lstatBackend","lstat","lstatSync","_statBackend","stat","statSync","_readdirBackend","readdir","readdirSync","_readFileBackend","readFile","readFileSync","_readJsonBackend","readJson","buffer","Error","JSON","parse","toString","readJsonSync","_readlinkBackend","readlink","readlinkSync","basename","filename","filePath","test","message","allowAlternatives","keys","prop","filenames","pathIsFile","directory","cdUp","loadDescriptionFile","content","replace","lastIndexOf","j","p","oldInfo","findDescriptionFile","onJson","code","missingDependencies","fileDependencies","json","dir","current","fs","isDirectory","processExportsField","parseIdentifier","checkImportsExportsFieldTarget","conditionNames","fieldNamePath","fieldName","fieldProcessorCache","WeakMap","query","fragment","exportsField","paths","fieldProcessor","parsedIdentifier","extension","requestPath","endsWith","resolve","file","isFile","processImportsField","dotCode","targetFile","targetPackage","importsField","path_","namespaceStartCharCode","req","moduleName","indexOf","prefix","alreadyTriedMainField","Symbol","mainModule","forceRelative","getPaths","directories","concat","addrs","map","d","reduce","array","addr","requestOptions","parsed","alternative","pnpApi","issuer","packageMatch","exec","packageName","resolution","apiResolution","resolveToUnqualified","considerBuiltins","pnpCode","line","split","filter","Boolean","ignoreSymlinks","AsyncSeriesBailHook","AsyncSeriesHook","SyncHook","createInnerContext","normalize","cachedJoin","toCamelCase","str","toUpperCase","Resolver","static","hook","hooks","resolveStep","noResolve","toLowerCase","withOptions","stage","resolveSync","context","sync","r","yield_","finishYield","yieldCalled","old","finishResolved","finishWithoutResolve","details","parentLog","msg","contextDependencies","stack","stackEntry","createStackEntry","newStack","recursionError","from","recursion","isUsed","innerContext","callAsync","identifier","part","internal","isPrivate","isModule","Normal","Internal","versions","SyncAsyncFileSystemDecorator","AliasFieldPlugin","AliasPlugin","AppendPlugin","ConditionalPlugin","DescriptionFilePlugin","DirectoryExistsPlugin","ExportsFieldPlugin","ExtensionAliasPlugin","FileExistsPlugin","ImportsFieldPlugin","JoinRequestPartPlugin","JoinRequestPlugin","MainFieldPlugin","ModulesInHierarchicalDirectoriesPlugin","ModulesInRootPlugin","NextPlugin","ParsePlugin","PnpPlugin","RestrictionsPlugin","ResultPlugin","RootsPlugin","SelfReferencePlugin","SymlinkPlugin","TryNextPlugin","UnsafeCachePlugin","UseFilePlugin","normalizeAlias","mergeFilteredToArray","lastElement","createResolver","normalizedOptions","mainFieldsSet","mainFields","fallback","aliasFields","cachePredicate","cacheWithContext","exportsFields","importsFields","descriptionFiles","enforceExtension","extensions","includes","extensionAlias","k","useSyncFileSystemCalls","unsafeCache","symlinks","modules","Relative","mainFiles","plugins","option","pnp","roots","resolveToContext","preferRelative","preferAbsolute","restrictions","createOptions","userPlugins","customResolver","newInteralResolve","newInternalResolve","resolveOptions","forEach","resolved","plugin","slashCode","backslashCode","isInside","parent","charCode","rule","resolverContext","root","pathsResult","pathSegments","segments","containsSymlink","resultType","reduceRight","a","b","arg","filterPredicate","cache","withContext","isYield","cacheId","stringify","getCacheId","yieldFn","yieldResult","messageOptional","innerLog","messageReported","iterator","next","loop","__innerRequest","__innerRequest_request","__innerRequest_relativePath","parts","CachedInputFileSystem","ResolverFactory","nodeFileSystem","nodeContext","environments","asyncResolver","syncResolver","createSync","mergeExports","descriptors","getOwnPropertyDescriptors","defineProperties","freeze","create","CloneBasenamePlugin","LogInfoPlugin","hashCode","createFieldProcessor","treeRoot","assertRequest","assertTarget","match","value","files","children","folder","wildcards","node","lastNonSlashIndex","slashIndex","lastFolderMatch","applyFolderMapping","folderMapping","applyWildcardMappings","wildcardMappings","newNode","findMatch","mapping","remainRequestIndex","direct","isConditionalMapping","conditionalMapping","directMapping","assertExportsFieldRequest","assertImportsFieldRequest","assertExportTarget","exp","expectFolder","assertImportTarget","imp","subpathMapping","mappingTarget","assert","targetMapping","targets","innerExports","innerExport","conditionalMapping_","lookup","conditions","last","condition","innerMapping","pop","createNode","walkPath","buildExportsFieldPathTree","buildImportsFieldPathTree","PATH_QUERY_FRAGMENT_REGEXP","CHAR_HASH","CHAR_SLASH","CHAR_BACKSLASH","CHAR_A","CHAR_Z","CHAR_LOWER_A","CHAR_LOWER_Z","CHAR_DOT","CHAR_COLON","posixNormalize","posix","winNormalize","win32","Empty","c0","c2","rootPath","requestType","joinCache","cd","__WEBPACK_EXTERNAL_MODULE__ease_js_deps_tapable_ce2c16a8__","__WEBPACK_EXTERNAL_MODULE_node_fs_1b05aee1__","__WEBPACK_EXTERNAL_MODULE_path__","y","x","__WEBPACK_EXTERNAL_MODULE_process__","__webpack_require__","__webpack_module_cache__","moduleId","cachedModule","__webpack_modules__","definition","o","defineProperty","enumerable"],"sourceRoot":""}